<BSkyCanvas internalhelpfilename="{assembly:Null}" Title="Multi-way Anova" ModelClasses="{assembly:Null}" StatusTextBoxName="{assembly:Null}" EditableComboBoxName="{assembly:Null}" RPackages="emmeans;car;dplyr;ggplot2" CanExecute="True" PrereqCommandString="{assembly:Null}" CommandString="local({&#xA;#Generating summaries&#xA;&#xA;factorVars =c({{@dest}})&#xA;for (vars in factorVars )&#xA;{&#xA;temp &lt;- {{%DATASET%}}  %&gt;%&#xA;  group_by(eval (parse (text=vars))) %&gt;%&#xA;  summarise(mean     = mean({{target}}),&#xA;            min      = min({{target}} ),&#xA;            max      = max({{target}} ),&#xA;            sd       = sd({{target}}  ),&#xA;            variance = var( {{target}}))&#xA;names(temp)[1]=vars;&#xA;BSkyFormat( as.data.frame(temp),singleTableOutputHeader=paste (&quot;Summaries for&quot;, &quot;{{target}}&quot;,&quot;by factor variable&quot;, vars))&#xA;}&#xA;&#xA;BSkyFormat(as.data.frame({{%DATASET%}} %&gt;% dplyr::group_by({{dest}}) %&gt;% dplyr::summarize(n=n(),mean=mean({{target}},na.rm =TRUE),median=median({{target}},na.rm =TRUE), min=min({{target}},na.rm =TRUE),max=max({{target}},na.rm =TRUE),sd =sd({{target}},na.rm =TRUE)   )),singleTableOutputHeader=paste(&quot;Summaries for&quot;, &quot;{{target}}&quot;,&quot;by factor variables&quot;, c(&quot;{{&amp;*dest}}&quot;)))&#xA;&#xA;#Creating the model&#xA;if ({{Interaction}})&#xA;{&#xA;BSkyMultiAnova=as.data.frame(summary(MultiAnova &lt;- stats::aov({{target}} ~{{&amp;+dest}} ,data={{%DATASET%}}))[[1]])&#xA;BSkyFormat(BSkyMultiAnova, singleTableOutputHeader =paste('Summary of Anova Model for' ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot;, sep=&quot; &quot;    ) )&#xA;}&#xA;else&#xA;{&#xA;BSkyMultiAnova=as.data.frame(summary(MultiAnova &lt;- aov({{target}} ~{{&amp;*dest}} ,data={{%DATASET%}}))[[1]])&#xA;BSkyFormat(BSkyMultiAnova, singleTableOutputHeader =paste('Summary of Anova Model for' ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot;, sep=&quot; &quot;    ) )&#xA;}&#xA;&#xA;#Displaying diagnostic plots&#xA;if ({{diag}})&#xA;{&#xA;BSkyGraphicsFormat(noOfGraphics=4)&#xA;plot(MultiAnova)&#xA;}&#xA;#Displaying Anova table with Type 2/3 sum of squares&#xA;&#xA;sumOfSquaresType=c(&quot;{{type}}&quot;)&#xA;if (sumOfSquaresType ==&quot;III&quot;)&#xA;{&#xA;vars=c(&quot;&quot;)&#xA;for (vars in factorVars )&#xA;{&#xA;eval(parse(text=paste( &quot;contrasts({{%DATASET%}}$&quot;, vars, &quot;)&lt;-&quot;,&quot;contr.sum&quot;,sep='') ))&#xA;}&#xA;anovaTable =as.data.frame(car::Anova(MultiAnova, type =&quot;III&quot;))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;III&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;&#xA;}&#xA;else if (sumOfSquaresType ==&quot;II&quot;)&#xA;{&#xA;anovaTable =as.data.frame(car::Anova(MultiAnova, type =&quot;II&quot;))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;II&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;&#xA;}&#xA;else if (sumOfSquaresType ==&quot;I&quot;)&#xA;{&#xA;anovaTable =as.data.frame(anova(MultiAnova))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;I&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;}&#xA;&#xA;#Displaying Estimated marginal means&#xA;&#xA;resultsEmmeans=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsEmmeans[[i]] &lt;- eval(parse (text =paste (&quot;emmeans::emmeans(MultiAnova, ~ &quot;, vars, &quot;)&quot;, sep=&quot;&quot;)))&#xA;BSkyFormat( as.data.frame(resultsEmmeans[[i]]), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars))&#xA;i=i+1&#xA;}&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;resEmmeans &lt;-emmeans::emmeans (MultiAnova,  ~{{&amp;|dest}})&#xA;BSkyFormat( as.data.frame(resEmmeans), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot; ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot; ))&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xA;resEmmeans &lt;-emmeans::emmeans (MultiAnova,  ~{{&amp;|dest}})&#xA;BSkyFormat( as.data.frame(resEmmeans), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot; ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot; ))&#xA;}&#xA;&#xA;if ({{levene}})&#xA;{&#xA;#Levenes test for homogeneity of variances for each factor variable&#xA;factorVars =c({{@dest}})&#xA;for (vars in factorVars)&#xA;{&#xA;BSky_Levene_Test &lt;- with ({{%DATASET%}}, eval (parse (text =paste (&quot;car::leveneTest(&quot;, &quot;{{target}}&quot;, &quot;,&quot;,vars, &quot;)&quot;, sep=&quot;&quot;,collapse=&quot;&quot;))))&#xA;BSkyFormat(as.data.frame(BSky_Levene_Test),singleTableOutputHeader=paste (&quot;Levene's test for homogenity of variances (center=mean) for&quot;, &quot; {{target}} against &quot;,vars  ) )   &#xA;}&#xA;}&#xA;&#xA;resultsContrasts=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsContrasts[[i]] &lt;- emmeans::contrast(resultsEmmeans[[i]],method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;)&#xA;resSummary &lt;-summary(resultsContrasts[[i]])&#xA;cat(attributes(resSummary)$mesg,sep=&quot;\n&quot;)&#xA;BSkyFormat( as.data.frame(resultsContrasts[[i]] ), singleTableOutputHeader =paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;,&quot;by&quot;, vars, &quot;(using method={{combon}})&quot; ))&#xA;i=i+1&#xA;}&#xA;&#xA;resContrasts &lt;-emmeans::contrast(resEmmeans,method=&quot;{{combon}}&quot;,adjust=&quot;{{adjust}}&quot; )&#xA;resSummary &lt;-summary(resContrasts)&#xA;cat(attributes(resSummary)$mesg,sep=&quot;\n&quot;)&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(summary(resContrasts )),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;, &quot;by&quot;,   &quot;{{&amp;+dest}}&quot;,&quot;(using method={{combon}})&quot;))&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(summary(resContrasts )),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;, &quot;by&quot;,   &quot;{{&amp;*dest}}&quot;,&quot;(using method={{combon}})&quot;))&#xA;}&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if ({{compactly}})&#xA;{&#xA;resultsContrasts=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsContrasts[[i]] &lt;- emmeans::cld(resultsEmmeans[[i]], alpha={{alpha}})&#xA;BSkyFormat( as.data.frame(resultsContrasts[[i]] ), singleTableOutputHeader =paste (&quot;Comparing means Compactly for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars))&#xA;i=i+1&#xA;}&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(emmeans::cld(resEmmeans), alpha={{alpha}}),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste(&quot;Comparing means Compactly for &quot;,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot; ))&#xA;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xA;BSkyFormat(as.data.frame(emmeans::cld(resEmmeans), alpha={{alpha}}),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste(&quot;Comparing means Compactly for &quot;,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot; ))&#xA;}&#xD;&#xA;}&#xA;&#xA;if ({{plot1}})&#xA;{&#xA;i=1&#xA;for (i in 1:length(factorVars) )&#xA;{&#xA;vars=factorVars[i]&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print (plot( contrast(resultsEmmeans[[i]], method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;) ) +   geom_vline(xintercept = 0) + ggtitle (paste (&quot;Plotting all comparisons ({{combon}}) for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars)))&#xA;i=i+1&#xA;}&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print (plot( emmeans::contrast(resEmmeans, method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;) ) +   geom_vline(xintercept = 0) + ggtitle (paste (&quot;Plotting all comparisons ({{combon}}) for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, &quot;{{&amp;,dest}}&quot;)))&#xA;}&#xA;&#xA;if ({{plot2}})&#xA;{&#xA;BSkyFormat(&quot;Interaction plot with Confidence Intervals&quot;)&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print(emmeans::lsmip(MultiAnova, {{&amp;~dest}}, CIs = TRUE) )&#xA;}&#xA;}&#xA;)" dlgsyntax="local({&#xA;#Generating summaries&#xA;&#xA;factorVars =c({{@dest}})&#xA;for (vars in factorVars )&#xA;{&#xA;temp &lt;- {{%DATASET%}}  %&gt;%&#xA;  group_by(eval (parse (text=vars))) %&gt;%&#xA;  summarise(mean     = mean({{target}}),&#xA;            min      = min({{target}} ),&#xA;            max      = max({{target}} ),&#xA;            sd       = sd({{target}}  ),&#xA;            variance = var( {{target}}))&#xA;names(temp)[1]=vars;&#xA;BSkyFormat( as.data.frame(temp),singleTableOutputHeader=paste (&quot;Summaries for&quot;, &quot;{{target}}&quot;,&quot;by factor variable&quot;, vars))&#xA;}&#xA;&#xA;BSkyFormat(as.data.frame({{%DATASET%}} %&gt;% dplyr::group_by({{dest}}) %&gt;% dplyr::summarize(n=n(),mean=mean({{target}},na.rm =TRUE),median=median({{target}},na.rm =TRUE), min=min({{target}},na.rm =TRUE),max=max({{target}},na.rm =TRUE),sd =sd({{target}},na.rm =TRUE)   )),singleTableOutputHeader=paste(&quot;Summaries for&quot;, &quot;{{target}}&quot;,&quot;by factor variables&quot;, c(&quot;{{&amp;*dest}}&quot;)))&#xA;&#xA;#Creating the model&#xA;if ({{Interaction}})&#xA;{&#xA;BSkyMultiAnova=as.data.frame(summary(MultiAnova &lt;- stats::aov({{target}} ~{{&amp;+dest}} ,data={{%DATASET%}}))[[1]])&#xA;BSkyFormat(BSkyMultiAnova, singleTableOutputHeader =paste('Summary of Anova Model for' ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot;, sep=&quot; &quot;    ) )&#xA;}&#xA;else&#xA;{&#xA;BSkyMultiAnova=as.data.frame(summary(MultiAnova &lt;- aov({{target}} ~{{&amp;*dest}} ,data={{%DATASET%}}))[[1]])&#xA;BSkyFormat(BSkyMultiAnova, singleTableOutputHeader =paste('Summary of Anova Model for' ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot;, sep=&quot; &quot;    ) )&#xA;}&#xA;&#xA;#Displaying diagnostic plots&#xA;if ({{diag}})&#xA;{&#xA;BSkyGraphicsFormat(noOfGraphics=4)&#xA;plot(MultiAnova)&#xA;}&#xA;#Displaying Anova table with Type 2/3 sum of squares&#xA;&#xA;sumOfSquaresType=c(&quot;{{type}}&quot;)&#xA;if (sumOfSquaresType ==&quot;III&quot;)&#xA;{&#xA;vars=c(&quot;&quot;)&#xA;for (vars in factorVars )&#xA;{&#xA;eval(parse(text=paste( &quot;contrasts({{%DATASET%}}$&quot;, vars, &quot;)&lt;-&quot;,&quot;contr.sum&quot;,sep='') ))&#xA;}&#xA;anovaTable =as.data.frame(car::Anova(MultiAnova, type =&quot;III&quot;))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;III&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;&#xA;}&#xA;else if (sumOfSquaresType ==&quot;II&quot;)&#xA;{&#xA;anovaTable =as.data.frame(car::Anova(MultiAnova, type =&quot;II&quot;))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;II&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;&#xA;}&#xA;else if (sumOfSquaresType ==&quot;I&quot;)&#xA;{&#xA;anovaTable =as.data.frame(anova(MultiAnova))&#xA;BSkyFormat(anovaTable, singleTableOutputHeader =paste(&quot;Anova table with type &quot;, &quot;I&quot;, &quot; sum of squares&quot;, sep='', collapse='')) &#xA;}&#xA;&#xA;#Displaying Estimated marginal means&#xA;&#xA;resultsEmmeans=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsEmmeans[[i]] &lt;- eval(parse (text =paste (&quot;emmeans::emmeans(MultiAnova, ~ &quot;, vars, &quot;)&quot;, sep=&quot;&quot;)))&#xA;BSkyFormat( as.data.frame(resultsEmmeans[[i]]), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars))&#xA;i=i+1&#xA;}&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;resEmmeans &lt;-emmeans::emmeans (MultiAnova,  ~{{&amp;|dest}})&#xA;BSkyFormat( as.data.frame(resEmmeans), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot; ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot; ))&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xA;resEmmeans &lt;-emmeans::emmeans (MultiAnova,  ~{{&amp;|dest}})&#xA;BSkyFormat( as.data.frame(resEmmeans), singleTableOutputHeader =paste (&quot;Estimated Marginal Means for&quot; ,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot; ))&#xA;}&#xA;&#xA;if ({{levene}})&#xA;{&#xA;#Levenes test for homogeneity of variances for each factor variable&#xA;factorVars =c({{@dest}})&#xA;for (vars in factorVars)&#xA;{&#xA;BSky_Levene_Test &lt;- with ({{%DATASET%}}, eval (parse (text =paste (&quot;car::leveneTest(&quot;, &quot;{{target}}&quot;, &quot;,&quot;,vars, &quot;)&quot;, sep=&quot;&quot;,collapse=&quot;&quot;))))&#xA;BSkyFormat(as.data.frame(BSky_Levene_Test),singleTableOutputHeader=paste (&quot;Levene's test for homogenity of variances (center=mean) for&quot;, &quot; {{target}} against &quot;,vars  ) )   &#xA;}&#xA;}&#xA;&#xA;resultsContrasts=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsContrasts[[i]] &lt;- emmeans::contrast(resultsEmmeans[[i]],method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;)&#xA;resSummary &lt;-summary(resultsContrasts[[i]])&#xA;cat(attributes(resSummary)$mesg,sep=&quot;\n&quot;)&#xA;BSkyFormat( as.data.frame(resultsContrasts[[i]] ), singleTableOutputHeader =paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;,&quot;by&quot;, vars, &quot;(using method={{combon}})&quot; ))&#xA;i=i+1&#xA;}&#xA;&#xA;resContrasts &lt;-emmeans::contrast(resEmmeans,method=&quot;{{combon}}&quot;,adjust=&quot;{{adjust}}&quot; )&#xA;resSummary &lt;-summary(resContrasts)&#xA;cat(attributes(resSummary)$mesg,sep=&quot;\n&quot;)&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(summary(resContrasts )),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;, &quot;by&quot;,   &quot;{{&amp;+dest}}&quot;,&quot;(using method={{combon}})&quot;))&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(summary(resContrasts )),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste (&quot;Contrasts for&quot;, &quot;{{target}}&quot;, &quot;by&quot;,   &quot;{{&amp;*dest}}&quot;,&quot;(using method={{combon}})&quot;))&#xA;}&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if ({{compactly}})&#xA;{&#xA;resultsContrasts=list()&#xA;i=1&#xA;for (vars in factorVars )&#xA;{&#xA;resultsContrasts[[i]] &lt;- emmeans::cld(resultsEmmeans[[i]], alpha={{alpha}})&#xA;BSkyFormat( as.data.frame(resultsContrasts[[i]] ), singleTableOutputHeader =paste (&quot;Comparing means Compactly for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars))&#xA;i=i+1&#xA;}&#xA;&#xD;&#xA;if ({{Interaction}})&#xD;&#xA;{&#xD;&#xA;BSkyFormat(as.data.frame(emmeans::cld(resEmmeans), alpha={{alpha}}),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste(&quot;Comparing means Compactly for &quot;,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;+dest}}&quot; ))&#xA;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xA;BSkyFormat(as.data.frame(emmeans::cld(resEmmeans), alpha={{alpha}}),decimalDigitsRounding=BSkyGetDecimalDigitSetting(),engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=paste(&quot;Comparing means Compactly for &quot;,&quot;{{target}}&quot;,&quot;by&quot;, &quot;{{&amp;*dest}}&quot; ))&#xA;}&#xD;&#xA;}&#xA;&#xA;if ({{plot1}})&#xA;{&#xA;i=1&#xA;for (i in 1:length(factorVars) )&#xA;{&#xA;vars=factorVars[i]&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print (plot( contrast(resultsEmmeans[[i]], method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;) ) +   geom_vline(xintercept = 0) + ggtitle (paste (&quot;Plotting all comparisons ({{combon}}) for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, vars)))&#xA;i=i+1&#xA;}&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print (plot( emmeans::contrast(resEmmeans, method=&quot;{{combon}}&quot;, adjust=&quot;{{adjust}}&quot;) ) +   geom_vline(xintercept = 0) + ggtitle (paste (&quot;Plotting all comparisons ({{combon}}) for&quot;, &quot;{{target}}&quot;,  &quot;by&quot;, &quot;{{&amp;,dest}}&quot;)))&#xA;}&#xA;&#xA;if ({{plot2}})&#xA;{&#xA;BSkyFormat(&quot;Interaction plot with Confidence Intervals&quot;)&#xA;BSkyGraphicsFormat(noOfGraphics=1)&#xA;print(emmeans::lsmip(MultiAnova, {{&amp;~dest}}, CIs = TRUE) )&#xA;}&#xA;}&#xA;)" Helpfile="{assembly:Null}" splitProcessing="True" MenuLocation="{assembly:Null}" OutputDefinition="{assembly:Null}" Width="550" Command="False" Height="320" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-size: 12px } .c3 { margin: 0px; padding: 0px; color: Black; font-family: 'Lucida Grande','Lucida Sans Unicode','Lucida Console','arial','Arial'; font-size: 12.09px; font-style: normal; font-weight: normal; text-indent: 0px; background-color: White } .c4 { margin: 0px 0px 11px; font-size: 12px; font-weight: bold } .c5 { font-family: 'Courier New'; font-size: 12px } .c6 { vertical-align: middle } .c7 { vertical-align: top } .c8 { margin: 0px 0px 12px } .c9 { color: Blue; text-decoration: underline; font-family: 'Courier New' } .c10 { font-size: 12px; font-weight: bold } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Multi-way Anova&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description: Fits a analysis of variance model along with data summaries, displays type I,II,III sum of squares, displays marginal means and contrasts (using marginal means). &amp;#160;Model is built with and without interaction effects. Optionally performs&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;Levene's test for homogeneity of variance across groups and plots graphs.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;The following is displayed&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;1. Summarizes the data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;dplyr::group_by(year,origin,cylinder) %&amp;gt;% dplyr::summarize(n=n(),mean=mean(mpg,na.rm =TRUE)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Package: dplyr&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Functions: group_by&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help (Type the commands in the R syntax editor): help(group_by, package='dplyr')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;2. Optionally builds and summarizes a full factorial anova model or &amp;#160;a model without interaction terms&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Package: stats&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: aov&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help (Type the commands in the R syntax editor): help(aov, package='stats')&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;3. Displays Anova table with Type I/II/III sum of squares&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Package: function Anova in package car for Type II, III sum of squares, function anova in package stats for Type I. When computing type III sum of squares a&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;ppropriate contrasts (contr.sum) are set for factor variables&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: Anova&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help (Type the commands in the R syntax editor): help(Anova, package ='car')&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Appropriate contrasts (contr.sum) are set for factor variables f&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;or Type III sum of squares&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;4. Displays estimated marginal means&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;package: emmeans&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: emmeans&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help (Type the commands in the R syntax editor): help(emmeans, package='emmeans')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;5. (Optional)&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Computes Levene's test for homogeneity of variance across groups.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;package: car&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: leveneTest&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help: help(leveneTest, package='car')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;6. Compares means and contrasts. Methods supported for contrasts include&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* pairwise&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* revpairwise (reverses order)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* poly - polynomial&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* trt.vs.ctrl &amp;#160;- compares each to 1st level&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* trt.vs.ctrlk - compares each to kth level&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;See help(&amp;quot;contrast-methods&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;for details.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;#### Adjustment Types&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* fdr - Benjamini-Hochberg a.k.a. fdr&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* BY - Benjamini &amp;amp; Yekutieli&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* bonferroni - way too conservative)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* hochberg&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* holm - default in many R functions&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* hommel&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* none - i.e. uncorrected pairwise t-tests&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* mvt&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* scheffe&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* sidak&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* tukey&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;For details see&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* help(&amp;quot;p.adjust.methods&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;* help(&amp;quot;summary.emmGrid&amp;quot;)&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;package: emmeans&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: contrast&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;help(contrast, package='emmeans')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;7. (Optional)&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: cld (Compact Letter Display)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help: help(cld, package='emmeans')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;package: emmeans&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;8. (Optional) plots the following&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;1. All diagnostics,&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;2. All comparisons&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;3. Displays least square means interaction plot&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;package: emmeans&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Function: lsmip&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help: help(lsmip, package='emmeans')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Fit an analysis of variance model by a call to&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;lm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;for each stratum.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;aov(formula, data = NULL, &amp;#160;...)&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c6&quot;&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;formula&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;A formula specifying the model.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;A data frame in which the variables specified in the formula will be found. If missing, the variables are searched for in the standard way.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&amp;#x200b;&amp;#x200b;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments to be passed to&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;lm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;, such as&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;subset&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;or&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;na.action&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;. See ‘Details’ about&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;weights&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;This provides a wrapper to&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;lm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;for fitting linear models to balanced or unbalanced experimental designs.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;The main difference from&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;lm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;is in the way&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;print&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;,&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;summary&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;and so on handle the fit: this is expressed in the traditional language of the analysis of variance rather than that of linear models.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;If the formula contains a single&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;term, this is used to specify error strata, and appropriate models are fitted within each error stratum.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;The formula can specify multiple responses.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Weights can be specified by a&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;weights&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;argument, but should not be used with an&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;term, and are incompletely supported (e.g., not by&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:22117/library/stats/help/model.tables&quot; class=&quot;c9&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;model.tables&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;An object of class&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;c(&amp;quot;aov&amp;quot;, &amp;quot;lm&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;or for multiple responses of class&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;c(&amp;quot;maov&amp;quot;, &amp;quot;aov&amp;quot;, &amp;quot;mlm&amp;quot;, &amp;quot;lm&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;or for multiple error strata of class&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;c(&amp;quot;aovlist&amp;quot;, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:22117/library/stats/help/listof&quot; class=&quot;c9&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;listof&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;. There are&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:22117/library/stats/help/print&quot; class=&quot;c9&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;print&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;and&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:22117/library/stats/help/summary&quot; class=&quot;c9&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;summary&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;methods available for these.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(aov, package='stats')" Background="#FFEEEFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{assembly:Null}" SepCharacter="{assembly:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="dest" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal" Width="205" Height="213" Left="257" Top="98" Enabled="True" OverwriteSettings="{assembly:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="257" av:Canvas.Top="98" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="2" Operator="LessThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dest" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="2" Operator="GreaterThanEqualsTo" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dest" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{assembly:Null}" SepCharacter="{assembly:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="{assembly:Null}" nomlevels="{assembly:Null}" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="210" Height="282" Left="9" Top="30" Enabled="True" OverwriteSettings="{assembly:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="9" av:Canvas.Top="30" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{assembly:Null}" SepCharacter="{assembly:Null}" maxNoOfVariables="1" SubstituteSettings="NoPrefix|UseComma" ordlevels="{assembly:Null}" nomlevels="{assembly:Null}" Name="target" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="205" Height="30" Left="257" Top="30" Enabled="True" OverwriteSettings="{assembly:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="257" av:Canvas.Top="30" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="target" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="target" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyVariableMoveButton Name="move1" InputList="src" TargetList="target" Width="30" Height="30" Left="220" Top="30" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="220" av:Canvas.Top="30"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="move2" InputList="src" TargetList="dest" Width="30" Height="30" Left="220" Top="97" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="220" av:Canvas.Top="97"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyButton Name="btn" Text="Options" Width="67" Height="30" Left="471" Top="30" Designer="{assembly:Null}" CanExecute="True" Enabled="True" IsEnabled="True" av:Canvas.Left="471" av:Canvas.Top="30"><BSkyButton.ClickBehaviour><BehaviourCollection Capacity="0" /></BSkyButton.ClickBehaviour><BSkyButton.Resources><BSkyCanvas internalhelpfilename="{assembly:Null}" Title="{assembly:Null}" ModelClasses="{assembly:Null}" StatusTextBoxName="{assembly:Null}" EditableComboBoxName="Options" RPackages="{assembly:Null}" CanExecute="True" PrereqCommandString="{assembly:Null}" CommandString="No entry required for a subdialog" dlgsyntax="No entry required for a subdialog" Helpfile="{assembly:Null}" splitProcessing="True" MenuLocation="No entry required for a subdialog" OutputDefinition="No entry required for a subdialog" Width="300" Command="False" Height="350" HelpText="{assembly:Null}" RHelpText="{assembly:Null}" Background="#FFEEEFFF" Focusable="True" assembly:Key="dlg"><BSkyCheckBox Name="levene" Text="Levenes test for homogeneity of variances" Width="249" Height="23" Left="10" Top="67" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="470" MaxHeight="300" IsEnabled="True" av:Canvas.Left="10" av:Canvas.Top="67"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Levenes test for homogeneity of variances</BSkyCheckBox><BSkyGroupBox Name="grp1" HeaderText="Contrasts " Text="{assembly:Null}" Width="285" Height="163" Left="8" Top="91" Header="Contrasts " Content="{assembly:Null}" BorderBrush="#FFA9A9A9" MaxWidth="300" MaxHeight="350" IsHitTestVisible="True" av:Canvas.Left="8" av:Canvas.Top="91" /><BSkyGroupBox Name="grp3" HeaderText="Plots" Text="{assembly:Null}" Width="285" Height="85" Left="8" Top="260" Header="Plots" Content="{assembly:Null}" BorderBrush="#FFA9A9A9" MaxWidth="300" MaxHeight="270" IsHitTestVisible="True" av:Canvas.Left="8" av:Canvas.Top="260" /><BSkyCheckBox Name="plot1" Text="Plot all comparisons" Width="163" Height="23" Left="19" Top="302" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="300" MaxHeight="350" IsEnabled="True" av:Canvas.Left="19" av:Canvas.Top="302"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Plot all comparisons</BSkyCheckBox><BSkyCheckBox Name="plot2" Text="Least square means interaction plots" Width="218" Height="24" Left="19" Top="321" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="300" MaxHeight="350" IsEnabled="True" av:Canvas.Left="19" av:Canvas.Top="321"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Least square means interaction plots</BSkyCheckBox><BSkyLabel Name="lab5" Text="Anova table with Type" Width="128" Height="27" Left="5" Top="35" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="300" MaxHeight="350" av:Canvas.Left="5" av:Canvas.Top="35">Anova table with Type</BSkyLabel><BSkyNonEditableComboBox Name="type" NothingSelected="II" Width="38" Height="24" Left="136" Top="36" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="II" MaxWidth="300" MaxHeight="350" IsEnabled="True" av:Canvas.Left="136" av:Canvas.Top="36"><BSkyNonEditableComboBox.ComboBoxEntries><assembly:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>II</s:String><s:String>III</s:String><s:String>I</s:String></BSkyNonEditableComboBox><BSkyLabel Name="lab6" Text="sum of squares" Width="100" Height="29" Left="176" Top="34" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="300" MaxHeight="350" av:Canvas.Left="176" av:Canvas.Top="34">sum of squares</BSkyLabel><BSkyCheckBox Name="diag" Text="Diagnostic plots" Width="126" Height="18" Left="19" Top="283" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="300" MaxHeight="380" IsEnabled="True" av:Canvas.Left="19" av:Canvas.Top="283"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Diagnostic plots</BSkyCheckBox><BSkyLabel Name="labn" Text="Compare Means using:" Width="130" Height="28" Left="15" Top="111" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="300" MaxHeight="400" av:Canvas.Left="15" av:Canvas.Top="111">Compare Means using:</BSkyLabel><BSkyNonEditableComboBox Name="combon" NothingSelected="tukey" Width="100" Height="25" Left="150" Top="112" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="pairwise" IsEnabled="True" av:Canvas.Left="150" av:Canvas.Top="112"><BSkyNonEditableComboBox.ComboBoxEntries><assembly:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>pairwise</s:String><s:String>revpairwise</s:String><s:String>poly</s:String><s:String>trt.vs.ctrl1</s:String><s:String>trt.vs.ctrlk</s:String><s:String>eff</s:String><s:String>def</s:String><s:String>consec</s:String><s:String>mean_chg</s:String></BSkyNonEditableComboBox><BSkyCheckBox Name="compactly" Text="Comparing means compactly" Width="175" Height="21" Left="19" Top="197" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="300" MaxHeight="260" IsEnabled="True" av:Canvas.Left="19" av:Canvas.Top="197"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Comparing means compactly</BSkyCheckBox><BSkyTextBox PrefixTxt="{assembly:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="alpha" Width="38" Height="30" Left="207" Top="212" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" MaxWidth="300" MaxHeight="260" AllowDrop="True" IsEnabled="True" av:Canvas.Left="207" av:Canvas.Top="212"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="0" /></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>0.05</BSkyTextBox><BSkyLabel Name="labxx" Text="Enter a value of alpha:" Width="126" Height="27" Left="75" Top="214" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="300" MaxHeight="260" av:Canvas.Left="75" av:Canvas.Top="214">Enter a value of alpha:</BSkyLabel><BSkyLabel Name="AdjustLabel" Text="Adjust p-values using:" Width="126" Height="32" Left="15" Top="162" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="300" MaxHeight="400" av:Canvas.Left="15" av:Canvas.Top="162">Adjust p-values using:</BSkyLabel><BSkyNonEditableComboBox Name="adjust" NothingSelected="{assembly:Null}" Width="100" Height="25" Left="150" Top="164" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="holm" IsEnabled="True" av:Canvas.Left="150" av:Canvas.Top="164"><BSkyNonEditableComboBox.ComboBoxEntries><assembly:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>holm</s:String><s:String>BY</s:String><s:String>bonferroni</s:String><s:String>fdr</s:String><s:String>hochberg</s:String><s:String>BH</s:String><s:String>hommel</s:String><s:String>none</s:String><s:String>mvt</s:String><s:String>scheffe</s:String><s:String>sidak</s:String><s:String>tukey</s:String></BSkyNonEditableComboBox><BSkyCheckBox Name="Interaction" Text="Ignore interaction terms in model" Width="239" Height="21" Left="10" Top="10" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" MaxWidth="300" MaxHeight="350" IsEnabled="True" av:Canvas.Left="10" av:Canvas.Top="10"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Ignore interaction terms in model</BSkyCheckBox></BSkyCanvas></BSkyButton.Resources>Options</BSkyButton><BSkyLabel Name="lab1" Text="Source variables:" Width="178" Height="26" Left="5" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="5" av:Canvas.Top="3">Source variables:</BSkyLabel><BSkyLabel Name="lab2" Text="Target variable:" Width="126" Height="27" Left="254" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="254" av:Canvas.Top="3">Target variable:</BSkyLabel><BSkyLabel Name="lab3" Text="Independent Factors:" Width="175" Height="26" Left="253" Top="71" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="253" av:Canvas.Top="71">Independent Factors:</BSkyLabel></BSkyCanvas>