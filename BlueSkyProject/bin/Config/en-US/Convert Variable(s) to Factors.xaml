<BSkyCanvas internalhelpfilename="{x:Null}" Title="Make Factor Variable" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="#Converts one or more variables to factor variables&#xA;BSky.Temp.Obj &lt;- BSkyMakeMultiColumnFactor({{trg}}, '{{%DATASET%}}')&#xA;#Refreshes the dataset in the data grid&#xA;BSkyLoadRefreshDataframe({{%DATASET%}})" dlgsyntax="#Converts one or more variables to factor variables&#xA;BSky.Temp.Obj &lt;- BSkyMakeMultiColumnFactor({{trg}}, '{{%DATASET%}}')&#xA;#Refreshes the dataset in the data grid&#xA;BSkyLoadRefreshDataframe({{%DATASET%}})" Helpfile="{x:Null}" splitProcessing="False" MenuLocation="{x:Null}" OutputDefinition="" Width="475" Command="False" Height="300" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-weight: bold; line-height: 1.15; font-size: 14.6666666666667px; font-family: 'Calibri','Trebuchet MS' } .c3 { margin: 0px 0px 11px; font-size: 12.87px; font-weight: bold } .c4 { font-size: 12px } .c5 { font-family: 'Courier New'; font-size: 12px } .c6 { vertical-align: middle } .c7 { vertical-align: top } .c8 { margin: 0px 0px 12px } .c9 { color: Blue; text-decoration: underline; font-family: 'Courier New' } .c10 { font-style: italic } .c11 { font-style: italic; font-size: 12px } .c12 { color: Blue; text-decoration: underline } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Description&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;The function&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is used to encode a vector as a factor (the terms ‘category’ and ‘enumerated type’ are also used for factors). If argument&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, the factor levels are assumed to be ordered. For compatibility with S there is also a function&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;is.factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;,&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;is.ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;,&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;as.factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;and&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;as.ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;are the membership and coercion functions for these classes.&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Usage&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;c5&quot;&gt;factor(x = character(), levels, labels = levels,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;exclude = NA, ordered = is.ordered(x), nmax = NA)&lt;br/&gt;&lt;br/&gt;ordered(x, ...)&lt;br/&gt;&lt;br/&gt;is.factor(x)&lt;br/&gt;is.ordered(x)&lt;br/&gt;&lt;br/&gt;as.factor(x)&lt;br/&gt;as.ordered(x)&lt;br/&gt;&lt;br/&gt;addNA(x, ifany = FALSE)&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Arguments&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c6&quot;&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a vector of data, usually taking a small number of distinct values.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;levels&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;an optional vector of the values (as character strings) that&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;might have taken. The default is the unique set of values taken by&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/as.character&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;as.character&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c5&quot;&gt;(x)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, sorted into increasing order&amp;#160;&lt;/span&gt;&lt;span class=&quot;c10&quot;&gt;&lt;span class=&quot;c4&quot;&gt;of&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. Note that this set can be specified as smaller than&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;sort(unique(x))&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;labels&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c11&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;an optional character vector of labels for the levels (in the same order as&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;after removing those in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;),&amp;#160;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;a character string of length 1.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;exclude&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a vector of values to be excluded when forming the set of levels. This should be of the same type as&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, and will be coerced if necessary.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;ordered&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;logical flag to determine if the levels should be regarded as ordered (in the order given).&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;nmax&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;an upper bound on the number of levels; see ‘Details’.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;...&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;(in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered(.)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;): any of the above, apart from&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;itself.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c7&quot;&gt;&lt;td class=&quot;c7&quot;&gt;&lt;span class=&quot;c5&quot;&gt;ifany&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c7&quot;&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span class=&quot;c4&quot;&gt;(only add an&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;level if it is used, i.e. if&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;any(is.na(x))&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Details&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;The type of the vector&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is not restricted; it only must have an&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/as.character&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;as.character&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;method and be sortable (by&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/sort.list&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;sort.list&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;).&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Ordered factors differ from factors only in their class, but methods and the model-fitting functions treat the two classes quite differently.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;The encoding of the vector happens as follows. First all the values in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;are removed from&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. If&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x[i]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;equals&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;levels[j]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, then the&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;-th element of the result is&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. If no match is found for&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x[i]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;(which will happen for excluded values) then the&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;-th element of the result is set to&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/NA&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;NA&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Normally the ‘levels’ used as an attribute of the result are the reduced set of levels after removing those in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, but this can be altered by supplying&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. This should either be a set of new labels for the levels, or a character string, in which case the levels are that character string with a sequence number appended.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;factor(x, exclude = NULL)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;applied to a factor is a no-operation unless there are unused levels: in that case, a factor with the reduced level set is returned. If&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is used it should also be a factor with the same level set as&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;or a set of codes for the levels to be excluded.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;The codes of a factor may contain&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/NA&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;NA&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;. For a numeric&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, set&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;exclude = NULL&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;to make&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/NA&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;NA&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;an extra level (prints as&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;lt;NA&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;); by default, this is the last level.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;If&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a level, the way to set a code to be missing (as opposed to the code of the missing level) is to use&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/is.na&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;is.na&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;on the left-hand-side of an assignment (as in&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;is.na(f)[i] &amp;lt;- TRUE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;; indexing inside&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;does not work). Under those circumstances missing values are currently printed as&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;lt;NA&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, i.e., identical to entries of level&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;is.factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is generic: you can write methods to handle specific classes of objects, see&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/InternalMethods&quot; class=&quot;c12&quot;&gt;&lt;span class=&quot;c4&quot;&gt;InternalMethods&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Where&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is not supplied,&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/unique&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;unique&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is called. Since factors typically have quite a small number of levels, for large vectors&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;it is helpful to supply&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;nmax&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;as an upper bound on the number of unique values.&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Value&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;returns an object of class&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;quot;factor&amp;quot;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;which has a set of integer codes the length of&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;with a&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;quot;levels&amp;quot;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;attribute of mode&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/character&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;character&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;and unique (&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;!&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/anyDuplicated&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;anyDuplicated&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c5&quot;&gt;(.)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;) entries. If argument&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is true (or&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered()&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is used) the result has class&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;c(&amp;quot;ordered&amp;quot;, &amp;quot;factor&amp;quot;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;Applying&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;to an ordered or unordered factor returns a factor (of the same type) with just the levels which occur: see also&amp;#160;&lt;/span&gt;&lt;a href=&quot;http://127.0.0.1:28718/library/base/help/[.factor&quot; class=&quot;c9&quot;&gt;&lt;span class=&quot;c4&quot;&gt;[.factor&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;for a more transparent way to achieve this.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;is.factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;returns&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;or&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;depending on whether its argument is of type factor or not. Correspondingly,&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;is.ordered&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;returns&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;when its argument is an ordered factor and&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;otherwise.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;as.factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;coerces its argument to a factor. It is an abbreviated form of&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;as.ordered(x)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;returns&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;if this is ordered, and&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;ordered(x)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;otherwise.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;addNA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;modifies a factor by turning&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;into an extra level (so that&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;values are counted in tables, for instance).&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(factor, package=base)" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="200" Height="265" Left="7" Top="29" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="7" av:Canvas.Top="29" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma|Enclosed|CreateArray" ordlevels="" nomlevels="" Name="trg" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="200" Height="265" Left="259" Top="29" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="259" av:Canvas.Top="29" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="trg" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="trg" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyLabel Name="lbl1" Text="All Variables" Width="136" Height="23" Left="3" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="3">All Variables</BSkyLabel><BSkyLabel Name="lbl2" Text="Variables to be converted to factor" Width="210" Height="24" Left="255" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="255" av:Canvas.Top="3">Variables to be converted to factor</BSkyLabel><BSkyVariableMoveButton Name="movebutton" InputList="src" TargetList="trg" Width="30" Height="30" Left="216" Top="27" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="216" av:Canvas.Top="27"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="440" Top="0" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="440" av:Canvas.Top="0">*</BSkyLabelReqdField></BSkyCanvas>