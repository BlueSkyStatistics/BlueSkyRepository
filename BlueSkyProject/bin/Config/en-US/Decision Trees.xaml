<BSkyCanvas internalhelpfilename="{x:Null}" Title="Tree Analysis" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="rpart; rpart.plot; partykit" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="{}{{rd2}}#Generate a new tree model if the model does not exist of the user has chosen the option to generate a model&#xA;if(!{{TreeGenChkbox}} || !exists(&quot;{{TxtTreeName}}&quot;))&#xA;{&#xA;            {{TxtTreeName}} = rpart({{dependent}}~{{independent}}, method={{RadioTreeMethod}}, data = {{%DATASET%}}, control = rpart.control(minsplit={{TxtMinSplit}}, minbucket ={{minBucket}}, maxdepth={{maxDepth}},cp ={{TxtCP}}))&#xA;}&#xA;&#xA;#If the user selected the option to prune the tree, prune it&#xA;if({{PruneTreeChkbox}})&#xA;{&#xA;    var=c('{{rd1}}{{rd2}}')&#xA;     &#xA;     if(var =='useOptimal')&#xA;      {&#xA;          bsky_tree = prune({{TxtTreeName}}, cp = {{TxtTreeName}}$cptable[which.min({{TxtTreeName}}$cptable[,&quot;xerror&quot;]),&quot;CP&quot;])&#xA;      }&#xA;      else&#xA;      {&#xA;         # prune the tree with the complexity parameter (cp) that the user provided&#xA;         bsky_tree = prune({{TxtTreeName}}, cp = {{TxtCPPrune}})&#xA;      }&#xA;}&#xA;else&#xA;{&#xA;    #Storing the model specified into bsky_tree for summaries below&#xA;    bsky_tree = {{TxtTreeName}}&#xA;}&#xA;&#xA;if({{PruneTreeChkbox}})&#xA;{&#xA;cat(&quot;Statistics for the pruned model are displayed&quot;)&#xA;}&#xA;&#xA;BSkyFormat(bsky_tree$method, singleTableOutputHeader=c(&quot;Tree Type&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$control), singleTableOutputHeader=c(&quot;Control Parameters&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$cptable), singleTableOutputHeader=c(&quot;CP Table&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$variable.importance), singleTableOutputHeader=c(&quot;Variable of Importance&quot;))&#xA;&#xA;if({{PlotCVChkbox}})  { plotcp(bsky_tree, sub =&quot;Plot of the Complexity Parameter table&quot;)  }                             #plot cp table&#xA;if({{PlotRSQRChkbox}}) { rsq.rpart(bsky_tree) }                       #appropriate for the &quot;anova&quot; method&#xA;BSkytmp = rpart.plot( {{TxtTreeName}}, type = 5, main=&quot;Decision Tree Diagram&quot;, roundint = FALSE) &#xA;&#xA;rm(bsky_tree)&#xA;&#xA;#Useful commands&#xA;#plot(bsky_tree)&#xA;#Summarize the model&#xA;#summary(bsky_tree)&#xA;#Print the cp table&#xA;#printcp(bsky_tree)&#xA;" dlgsyntax="{}{{rd2}}#Generate a new tree model if the model does not exist of the user has chosen the option to generate a model&#xA;if(!{{TreeGenChkbox}} || !exists(&quot;{{TxtTreeName}}&quot;))&#xA;{&#xA;            {{TxtTreeName}} = rpart({{dependent}}~{{independent}}, method={{RadioTreeMethod}}, data = {{%DATASET%}}, control = rpart.control(minsplit={{TxtMinSplit}}, minbucket ={{minBucket}}, maxdepth={{maxDepth}},cp ={{TxtCP}}))&#xA;}&#xA;&#xA;#If the user selected the option to prune the tree, prune it&#xA;if({{PruneTreeChkbox}})&#xA;{&#xA;    var=c('{{rd1}}{{rd2}}')&#xA;     &#xA;     if(var =='useOptimal')&#xA;      {&#xA;          bsky_tree = prune({{TxtTreeName}}, cp = {{TxtTreeName}}$cptable[which.min({{TxtTreeName}}$cptable[,&quot;xerror&quot;]),&quot;CP&quot;])&#xA;      }&#xA;      else&#xA;      {&#xA;         # prune the tree with the complexity parameter (cp) that the user provided&#xA;         bsky_tree = prune({{TxtTreeName}}, cp = {{TxtCPPrune}})&#xA;      }&#xA;}&#xA;else&#xA;{&#xA;    #Storing the model specified into bsky_tree for summaries below&#xA;    bsky_tree = {{TxtTreeName}}&#xA;}&#xA;&#xA;if({{PruneTreeChkbox}})&#xA;{&#xA;cat(&quot;Statistics for the pruned model are displayed&quot;)&#xA;}&#xA;&#xA;BSkyFormat(bsky_tree$method, singleTableOutputHeader=c(&quot;Tree Type&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$control), singleTableOutputHeader=c(&quot;Control Parameters&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$cptable), singleTableOutputHeader=c(&quot;CP Table&quot;))&#xA;BSkyFormat(as.data.frame(bsky_tree$variable.importance), singleTableOutputHeader=c(&quot;Variable of Importance&quot;))&#xA;&#xA;if({{PlotCVChkbox}})  { plotcp(bsky_tree, sub =&quot;Plot of the Complexity Parameter table&quot;)  }                             #plot cp table&#xA;if({{PlotRSQRChkbox}}) { rsq.rpart(bsky_tree) }                       #appropriate for the &quot;anova&quot; method&#xA;BSkytmp = rpart.plot( {{TxtTreeName}}, type = 5, main=&quot;Decision Tree Diagram&quot;, roundint = FALSE) &#xA;&#xA;rm(bsky_tree)&#xA;&#xA;#Useful commands&#xA;#plot(bsky_tree)&#xA;#Summarize the model&#xA;#summary(bsky_tree)&#xA;#Print the cp table&#xA;#printcp(bsky_tree)&#xA;" Helpfile="{x:Null}" splitProcessing="False" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="{x:Null}" Width="620" Command="False" Height="495" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 20px; font-size: 24px; font-weight: bold; background-color: White; color: #666666; font-family: 'Courier New'; font-style: normal; text-indent: 0px } .c2 { width: 100%; color: Black; font-family: 'Times New Roman'; font-size: 18.6666666666667px; font-style: normal; font-weight: normal; text-indent: 0px } .c3 { vertical-align: middle } .c4 { margin: 0px 0px 11px; line-height: 1.07; font-size: 14.6666666666667px; font-family: 'Calibri','Arial' } .c5 { font-size: 16px; line-height: 1.07; font-family: 'Times New Roman','Times New Roman'; font-weight: bold } .c6 { vertical-align: middle; text-align: right } .c7 { margin: 0px 0px 18px; font-size: 24px; font-weight: bold; background-color: White; color: #666666; font-family: 'Courier New'; text-align: center; font-style: normal; text-indent: 0px } .c8 { margin: 0px 0px 12px; color: Black; font-family: 'Times New Roman'; font-size: 18.6666666666667px; font-style: normal; font-weight: normal; text-indent: 0px } .c9 { font-family: 'Courier New' } .c10 { font-family: 'Courier New'; color: Black; font-style: normal; font-weight: normal; text-indent: 0px } .c11 { color: Black; font-family: 'Times New Roman'; font-size: 18.6666666666667px; font-style: normal; font-weight: normal; text-indent: 0px } .c12 { vertical-align: top } .c13 { margin: 0px 0px 12px } .c14 { color: Purple; text-decoration: underline; background-color: White } .c15 { color: Purple; text-decoration: underline; background-color: White; font-family: 'Courier New' } .c16 { font-style: italic } .c17 { font-weight: bold; font-family: 'Courier New','Courier'; color: #666666 } .c18 { font-weight: bold } .c19 { margin: 0px 0px 10px; line-height: 1.14999997615814; font-size: 11px; font-family: 'Arial' } .c20 { font-weight: normal; font-size: 14.6666660308838px; font-family: 'Arial' } .c21 { font-weight: bold; font-size: 14.6666660308838px; font-family: 'Arial' } .c22 { margin: 0px 0px 10px; color: Black; font-family: 'Times New Roman'; font-size: 18.6666666666667px; font-style: normal; font-weight: normal; text-indent: 0px } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;div class=&quot;c1&quot;&gt;&lt;table class=&quot;c2&quot;&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c3&quot;&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c3&quot;&gt;&lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Note:&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Dependent variables can be factor, ordinal, string, logical and numeric&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Independent Variables can be factor, ordinal, string, logical and numeric&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;rpart {rpart}&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Recursive Partitioning and Regression Trees&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;Fit a&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;&amp;#160;model&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;rpart(formula, data, weights, subset, na.action = na.rpart, method,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;model = FALSE, x = FALSE, y = TRUE, parms, control, cost, ...)&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;table class=&quot;c11&quot;&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c3&quot;&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;formula&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;a&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/formula&quot; class=&quot;c14&quot;&gt;formula&lt;/a&gt;, with a response but no interaction terms. If this a a data frame, that is taken as the model frame (see&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/model.frame&quot; class=&quot;c15&quot;&gt;model.frame&lt;/a&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;an optional data frame in which to interpret the variables named in the formula.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;weights&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;optional case weights.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;subset&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;optional expression saying that only a subset of the rows of the data should be used in the fit.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;na.action&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;the default action deletes all observations for which&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&amp;#160;is missing, but keeps those in which one or more predictors are missing.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;one of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;anova&amp;quot;&lt;/span&gt;&lt;/span&gt;,&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;poisson&amp;quot;&lt;/span&gt;&lt;/span&gt;,&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;/span&gt;&amp;#160;or&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;exp&amp;quot;&lt;/span&gt;&lt;/span&gt;. If&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&amp;#160;is missing then the routine tries to make an intelligent guess. If&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&amp;#160;is a survival object, then&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method = &amp;quot;exp&amp;quot;&lt;/span&gt;&lt;/span&gt;&amp;#160;is assumed, if&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&amp;#160;has 2 columns then&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method = &amp;quot;poisson&amp;quot;&lt;/span&gt;&lt;/span&gt;&amp;#160;is assumed, if&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&amp;#160;is a factor then&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method = &amp;quot;class&amp;quot;&lt;/span&gt;&lt;/span&gt;&amp;#160;is assumed, otherwise&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method = &amp;quot;anova&amp;quot;&lt;/span&gt;&lt;/span&gt;&amp;#160;is assumed. It is wisest to specify the method directly, especially as more criteria may added to the function in future.&lt;/p&gt;&lt;p class=&quot;c13&quot;&gt;Alternatively,&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&amp;#160;can be a list of functions named&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;init&lt;/span&gt;&lt;/span&gt;,&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;split&lt;/span&gt;&lt;/span&gt;&amp;#160;and&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;eval&lt;/span&gt;&lt;/span&gt;. Examples are given in the file ‘&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;tests/usersplits.R&lt;/span&gt;&lt;/span&gt;’ in the sources, and in the vignettes ‘User Written Split Functions’.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;if logical: keep a copy of the model frame in the result? If the input value for&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&amp;#160;is a model frame (likely from an earlier call to the&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;&amp;#160;function), then this frame is used rather than constructing new data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;keep a copy of the&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&amp;#160;matrix in the result.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;keep a copy of the dependent variable in the result. If missing and&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&amp;#160;is supplied this defaults to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;FALSE&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;parms&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;optional parameters for the splitting function.&lt;br/&gt;Anova splitting has no parameters.&lt;br/&gt;Poisson splitting has a single parameter, the coefficient of variation of the prior distribution on the rates. The default value is 1.&lt;br/&gt;Exponential splitting has the same parameter as Poisson.&lt;br/&gt;For classification splitting, the list can contain any of: the vector of prior probabilities (component&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;prior&lt;/span&gt;&lt;/span&gt;), the loss matrix (component&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;loss&lt;/span&gt;&lt;/span&gt;) or the splitting index (component&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;split&lt;/span&gt;&lt;/span&gt;). The priors must be positive and sum to 1. The loss matrix must have zeros on the diagonal and positive off-diagonal elements. The splitting index can be&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;gini&lt;/span&gt;&lt;/span&gt;&amp;#160;or&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;information&lt;/span&gt;&lt;/span&gt;. The default priors are proportional to the data counts, the losses default to 1, and the split defaults to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;gini&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;control&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;a list of options that control details of the&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;&amp;#160;algorithm. See&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart.control&quot; class=&quot;c15&quot;&gt;rpart.control&lt;/a&gt;.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;cost&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;a vector of non-negative costs, one for each variable in the model. Defaults to one for all variables. These are scalings to be applied when considering splits, so the improvement on splitting on a variable is divided by its cost in deciding which split to choose.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;arguments to&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart.control&quot; class=&quot;c15&quot;&gt;rpart.control&lt;/a&gt;&amp;#160;may also be specified in the call to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;. They are checked against the list of valid arguments.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;This differs from the&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;tree&lt;/span&gt;&lt;/span&gt;&amp;#160;function in S mainly in its handling of surrogate variables. In most details it follows Breiman&amp;#160;&lt;span&gt;&lt;span class=&quot;c16&quot;&gt;et. al&lt;/span&gt;&lt;/span&gt;&amp;#160;(1984) quite closely.&amp;#160;&lt;span&gt;&lt;span class=&quot;c17&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&amp;#160;package&amp;#160;&lt;span&gt;&lt;span class=&quot;c18&quot;&gt;tree&lt;/span&gt;&lt;/span&gt;&amp;#160;provides a re-implementation of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;tree&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;An object of class&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;. See&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart.object&quot; class=&quot;c15&quot;&gt;rpart.object&lt;/a&gt;.&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;References&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;Breiman L., Friedman J. H., Olshen R. A., and Stone, C. J. (1984)&amp;#160;&lt;span&gt;&lt;span class=&quot;c16&quot;&gt;Classification and Regression Trees.&lt;/span&gt;&lt;/span&gt;&amp;#160;Wadsworth.&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;See Also&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart.control&quot; class=&quot;c15&quot;&gt;rpart.control&lt;/a&gt;,&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart.object&quot; class=&quot;c15&quot;&gt;rpart.object&lt;/a&gt;,&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/summary.rpart&quot; class=&quot;c15&quot;&gt;summary.rpart&lt;/a&gt;,&amp;#160;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/print.rpart&quot; class=&quot;c15&quot;&gt;print.rpart&lt;/a&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;fit &amp;lt;- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)&lt;br/&gt;fit2 &amp;lt;- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;parms = list(prior = c(.65,.35), split = &amp;quot;information&amp;quot;))&lt;br/&gt;fit3 &amp;lt;- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;control = rpart.control(cp = 0.05))&lt;br/&gt;par(mfrow = c(1,2), xpd = NA) # otherwise on some devices the text is clipped&lt;br/&gt;plot(fit)&lt;br/&gt;text(fit, use.n = TRUE)&lt;br/&gt;plot(fit2)&lt;br/&gt;text(fit2, use.n = TRUE)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span&gt;&lt;span class=&quot;c20&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;Package: &amp;#160;rpart&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;#160;rpart.plot&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;#160;Other:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c20&quot;&gt;Click the R Help button to get detailed R help&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span&gt;&lt;span class=&quot;c20&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span&gt;&lt;span class=&quot;c20&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table class=&quot;c2&quot;&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c3&quot;&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c3&quot;&gt;rpart.control {rpart}&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Control for Rpart Fits&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c22&quot;&gt;Various parameters that control aspects of the&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;&amp;#160;fit.&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;rpart.control(minsplit = 20, minbucket = round(minsplit/3), cp = 0.01, &lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;maxcompete = 4, maxsurrogate = 5, usesurrogate = 2, xval = 10,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;surrogatestyle = 0, maxdepth = 30, ...)&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;table class=&quot;c11&quot;&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c3&quot;&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minsplit&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;the minimum number of observations that must exist in a node in order for a split to be attempted.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minbucket&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;the minimum number of observations in any terminal&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;lt;leaf&amp;gt;&lt;/span&gt;&lt;/span&gt;&amp;#160;node. If only one of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minbucket&lt;/span&gt;&lt;/span&gt;&amp;#160;or&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minsplit&lt;/span&gt;&lt;/span&gt;&amp;#160;is specified, the code either sets&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minsplit&lt;/span&gt;&lt;/span&gt;&amp;#160;to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minbucket*3&lt;/span&gt;&lt;/span&gt;&amp;#160;or&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minbucket&lt;/span&gt;&lt;/span&gt;&amp;#160;to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;minsplit/3&lt;/span&gt;&lt;/span&gt;, as appropriate.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;cp&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;complexity parameter. Any split that does not decrease the overall lack of fit by a factor of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;cp&lt;/span&gt;&lt;/span&gt;&amp;#160;is not attempted. For instance, with&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;anova&lt;/span&gt;&lt;/span&gt;&amp;#160;splitting, this means that the overall R-squared must increase by&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;cp&lt;/span&gt;&lt;/span&gt;&amp;#160;at each step. The main role of this parameter is to save computing time by pruning off splits that are obviously not worthwhile. Essentially,the user informs the program that any split which does not improve the fit by&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;cp&lt;/span&gt;&lt;/span&gt;&amp;#160;will likely be pruned off by cross-validation, and that hence the program need not pursue it.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;maxcompete&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;the number of competitor splits retained in the output. It is useful to know not just which split was chosen, but which variable came in second, third, etc.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;maxsurrogate&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;the number of surrogate splits retained in the output. If this is set to zero the compute time will be reduced, since approximately half of the computational time (other than setup) is used in the search for surrogate splits.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;usesurrogate&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;how to use surrogates in the splitting process.&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&amp;#160;means display only; an observation with a missing value for the primary split rule is not sent further down the tree.&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;1&lt;/span&gt;&lt;/span&gt;means use surrogates, in order, to split subjects missing the primary variable; if all surrogates are missing the observation is not split. For value&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&amp;#160;,if all surrogates are missing, then send the observation in the majority direction. A value of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&amp;#160;corresponds to the action of&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;tree&lt;/span&gt;&lt;/span&gt;, and&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&amp;#160;to the recommendations of Breiman&amp;#160;&lt;span&gt;&lt;span class=&quot;c16&quot;&gt;et.al&lt;/span&gt;&lt;/span&gt;&amp;#160;(1984).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;xval&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;number of cross-validations.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;surrogatestyle&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;controls the selection of a best surrogate. If set to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&amp;#160;(default) the program uses the total number of correct classification for a potential surrogate variable, if set to&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&amp;#160;it uses the percent correct, calculated over the non-missing values of the surrogate. The first option more severely penalizes covariates with a large number of missing values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;maxdepth&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;Set the maximum depth of any node of the final tree, with the root node counted as depth 0. Values greater than 30&amp;#160;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;rpart&lt;/span&gt;&lt;/span&gt;&amp;#160;will give nonsense results on 32-bit machines.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c12&quot;&gt;&lt;p class=&quot;c13&quot;&gt;mop up other arguments.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c22&quot;&gt;A list containing the options.&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c1&quot;&gt;See Also&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c22&quot;&gt;&lt;a href=&quot;http://127.0.0.1:29732/library/rpart/help/rpart&quot; class=&quot;c15&quot;&gt;rpart&lt;/a&gt;&amp;#x200b;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(rpart)" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="source" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="280" Height="295" Left="6" Top="25" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="6" av:Canvas.Top="25" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UsePlus" ordlevels="" nomlevels="" Name="independent" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="279" Height="165" Left="325" Top="156" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="325" av:Canvas.Top="156" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independent" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independent" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyGroupingVariable Name="dependent" Width="280" Height="30" Left="325" Top="96" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" CanExecute="False" SubstituteSettings="NoPrefix|UseComma" Enabled="True" PrefixTxt="" SepCharacter="" nomlevels="" ordlevels="" Syntax="%%VALUE%%" IsEnabled="True" av:Canvas.Left="325" av:Canvas.Top="96"><BSkyGroupingVariable.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyGroupingVariable.SelectionChangeBehaviour><SingleItemList CanExecute="False" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Left="NaN" Top="NaN" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True" Focusable="True" av:Grid.IsSharedSizeScope="True"><SingleItemList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></SingleItemList.SelectionChangeBehaviour><SingleItemList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></SingleItemList.Template><SingleItemList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></SingleItemList.Style></SingleItemList></BSkyGroupingVariable><BSkyLabel Name="label2" Text="Dependent Variable (one)" Width="202" Height="25" Left="320" Top="72" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="320" av:Canvas.Top="72">Dependent Variable (one)</BSkyLabel><BSkyLabel Name="label1" Text="Source Variables" Width="110" Height="24" Left="6" Top="3.01980662698043E-14" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="6" av:Canvas.Top="3.01980662698043E-14">Source Variables</BSkyLabel><BSkyVariableMoveButton Name="move1" InputList="source" TargetList="independent" Width="30" Height="30" Left="288" Top="155" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="288" av:Canvas.Top="155"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="move2" InputList="source" TargetList="dependent" Width="30" Height="30" Left="288" Top="95" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="288" av:Canvas.Top="95"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabel Name="label3" Text="Independent Variables (one or more)" Width="206" Height="25" Left="320" Top="129" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="320" av:Canvas.Top="129">Independent Variables (one or more)</BSkyLabel><BSkyLabel Name="TreeNameLabel" Text="Enter Model Name" Width="141" Height="24" Left="320" Top="0" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="320" av:Canvas.Top="0">Enter Model Name</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="TxtTreeName" Width="280" Height="30" Left="325" Top="24" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="325" av:Canvas.Top="24"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtTreeName" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtTreeName" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>treeModel1</BSkyTextBox><BSkyCheckBox Name="TreeGenChkbox" Text="Don't Re-generate if Tree Already Exists" Width="262" Height="21" Left="326" Top="58" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="326" av:Canvas.Top="58"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Don't Re-generate if Tree Already Exists</BSkyCheckBox><BSkyGroupBox Name="GpboxOptionalParam" HeaderText="Pre-pruning parameters" Text="{x:Null}" Width="199" Height="164" Left="7" Top="325" Header="Pre-pruning parameters" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="7" av:Canvas.Top="325" /><BSkyLabel Name="LabelminSplit" Text="Minimum Split" Width="87" Height="29" Left="10" Top="349" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="10" av:Canvas.Top="349">Minimum Split</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="TxtMinSplit" Width="45" Height="30" Left="140" Top="346" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="140" av:Canvas.Top="346"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtMinSplit" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtMinSplit" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtMinSplit" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>20</BSkyTextBox><BSkyLabel Name="LabelCP" Text="Complexity parameter" Width="127" Height="27" Left="10" Top="416" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="10" av:Canvas.Top="416">Complexity parameter</BSkyLabel><BSkyTextBox PrefixTxt="" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="TxtCP" Width="45" Height="30" Left="140" Top="415" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="140" av:Canvas.Top="415"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCP" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCP" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCP" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>0.01</BSkyTextBox><BSkyGroupBox Name="GpPruneParam" HeaderText="Optionally Prune Tree" Text="{x:Null}" Width="252" Height="120" Left="213" Top="326" Header="Optionally Prune Tree" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="213" av:Canvas.Top="326" /><BSkyCheckBox Name="PruneTreeChkbox" Text="Prune Tree" Width="75" Height="20" Left="226" Top="349" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="226" av:Canvas.Top="349"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="rd1" PropertyName="Enabled" Value="True" /><PropertySetter ControlName="rd1" PropertyName="IsSelected" Value="True" /><PropertySetter ControlName="rd2" PropertyName="Enabled" Value="True" /><PropertySetter ControlName="TxtCPPrune" PropertyName="Enabled" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="False" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="8"><PropertySetter ControlName="rd1" PropertyName="IsSelected" Value="False" /><PropertySetter ControlName="rd2" PropertyName="IsSelected" Value="False" /><PropertySetter ControlName="rd1" PropertyName="Enabled" Value="False" /><PropertySetter ControlName="rd2" PropertyName="Enabled" Value="False" /><PropertySetter ControlName="TxtCPPrune" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="TxtCPPrune" PropertyName="Enabled" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyCheckBox.CheckedChangeBehaviour>Prune Tree</BSkyCheckBox><BSkyLabel Name="labelCPPruning" Text="Enter complexity parameter" Width="156" Height="28" Left="265" Top="409" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="265" av:Canvas.Top="409">Enter complexity parameter</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="TxtCPPrune" Width="38" Height="30" Left="421" Top="408" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="False" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="False" av:Canvas.Left="421" av:Canvas.Top="408" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCPPrune" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCPPrune" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCPPrune" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyCheckBox Name="PlotCVChkbox" Text="Plot Cross-Validation" Width="130" Height="19" Left="481" Top="356" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="481" av:Canvas.Top="356"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Plot Cross-Validation</BSkyCheckBox><BSkyCheckBox Name="PlotRSQRChkbox" Text="Plot R-squared " Width="112" Height="18" Left="481" Top="378" IsSelected="False" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="481" av:Canvas.Top="378" xml:space="preserve"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Plot R-squared </BSkyCheckBox><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="maxDepth" Width="45" Height="30" Left="140" Top="450" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="140" av:Canvas.Top="450"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="maxDepth" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="maxDepth" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="maxDepth" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>30</BSkyTextBox><BSkyLabel Name="lab99" Text="Maximum depth" Width="120" Height="29" Left="10" Top="452" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="10" av:Canvas.Top="452">Maximum depth</BSkyLabel><BSkyLabel Name="lab120" Text="Minimum Bucket" Width="101" Height="25" Left="10" Top="380" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="10" av:Canvas.Top="380">Minimum Bucket</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="minBucket" Width="45" Height="29" Left="140" Top="380" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="140" av:Canvas.Top="380" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="minBucket" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="minBucket" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="minBucket" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyRadioButton GroupName="grp1" Name="rd1" Text="Use optimal complexity parameter" Width="210" Left="0" Top="0" Height="20" IsSelected="False" CanExecute="True" Enabled="False" Syntax="useOptimal" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="False" av:Canvas.Left="251" av:Canvas.Top="371"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCPPrune" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="TxtCPPrune" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Use optimal complexity parameter</BSkyRadioButton><BSkyRadioButton GroupName="grp1" Name="rd2" Text="Specify complexity parameter" Width="182" Left="0" Top="0" Height="19" IsSelected="False" CanExecute="True" Enabled="False" Syntax="%%VALUE%%" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="False" av:Canvas.Left="251" av:Canvas.Top="392"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="TxtCPPrune" PropertyName="Enabled" Value="True" /><PropertySetter ControlName="TxtCPPrune" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="TxtCPPrune" PropertyName="CanExecute" Value="False" /><PropertySetter ControlName="{x:Null}" PropertyName="{x:Null}" Value="{x:Null}" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Specify complexity parameter</BSkyRadioButton><BSkyGroupBox Name="plots" HeaderText="Plots" Text="{x:Null}" Width="149" Height="121" Left="470" Top="326" Header="Plots" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="470" av:Canvas.Top="326" /><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="461" Top="69" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="461" av:Canvas.Top="69">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="520" Top="126" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="520" av:Canvas.Top="126">*</BSkyLabelReqdField></BSkyCanvas>