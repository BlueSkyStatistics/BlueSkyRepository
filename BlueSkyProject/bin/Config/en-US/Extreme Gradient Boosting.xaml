<BSkyCanvas internalhelpfilename="{x:Null}" Title="Extreme Boosting (xgboost)" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="xgboost;ggplot2" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;{{model}} &lt;- xgboost::xgboost(data = as.matrix({{%DATASET%}}[,{{independentvars}}]), label = {{$dependentvar}},  params = list(booster = &quot;gbtree&quot;, objective = &quot;{{objective}}&quot;, eta={{eta}}, gamma={{gamma}}, max_depth={{maxdepth}}, max_delta_step ={{maxdeltastep}}, min_child_weight={{minchldweight}}), nrounds={{nrounds}}, base_score={{basescore}}, verbose ={{Verbose}}, num_class={{numclasses}}, print_every_n = {{printevery}})&#xA;&#xA;#if (!is.null({{model}}))&#xA;#{&#xA;#Variable importance&#xA;BSkyImpMatrix &lt;- xgboost::xgb.importance (feature_names ={{independentvars}} ,model = {{model}})&#xA;&#xA;#Graph the importance&#xA;xgb.ggplot.importance(importance_matrix = BSkyImpMatrix ) +ggtitle(&quot;Feature Importance Bar Plot&quot;) +labs(y=&quot;Importance(Gain)&quot;)&#xA;&#xA;#Importance in tabular format&#xA;BSkyFormat(as.data.frame(BSkyImpMatrix ),singleTableOutputHeader = &quot;Feature Importance&quot;)&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;'{{dependentvar}}'&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;{{independentvars}}&quot;&#xA;&#xA;#Plot the tree&#xA;xgboost::xgb.plot.tree(model={{model}})&#xA;&#xA;rm(BSkyImpMatrix)&#xA;#}&#xA;&#xA;&#xA;&#xA;" dlgsyntax="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;{{model}} &lt;- xgboost::xgboost(data = as.matrix({{%DATASET%}}[,{{independentvars}}]), label = {{$dependentvar}},  params = list(booster = &quot;gbtree&quot;, objective = &quot;{{objective}}&quot;, eta={{eta}}, gamma={{gamma}}, max_depth={{maxdepth}}, max_delta_step ={{maxdeltastep}}, min_child_weight={{minchldweight}}), nrounds={{nrounds}}, base_score={{basescore}}, verbose ={{Verbose}}, num_class={{numclasses}}, print_every_n = {{printevery}})&#xA;&#xA;#if (!is.null({{model}}))&#xA;#{&#xA;#Variable importance&#xA;BSkyImpMatrix &lt;- xgboost::xgb.importance (feature_names ={{independentvars}} ,model = {{model}})&#xA;&#xA;#Graph the importance&#xA;xgb.ggplot.importance(importance_matrix = BSkyImpMatrix ) +ggtitle(&quot;Feature Importance Bar Plot&quot;) +labs(y=&quot;Importance(Gain)&quot;)&#xA;&#xA;#Importance in tabular format&#xA;BSkyFormat(as.data.frame(BSkyImpMatrix ),singleTableOutputHeader = &quot;Feature Importance&quot;)&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;'{{dependentvar}}'&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;{{independentvars}}&quot;&#xA;&#xA;#Plot the tree&#xA;xgboost::xgb.plot.tree(model={{model}})&#xA;&#xA;rm(BSkyImpMatrix)&#xA;#}&#xA;&#xA;&#xA;&#xA;" Helpfile="{x:Null}" splitProcessing="False" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="" Width="590" Command="False" Height="640" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-size: 16px; font-weight: bold; text-decoration: underline } .c3 { font-size: 13.3333333333333px } .c4 { font-size: 16px; font-weight: bold; text-decoration:  } .c5 { font-size: 16px; font-weight: bold } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Create an eXtreme Gradient Boosting model&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Note:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;1.For predicting dependent variable of type factor, you need to recode the dependent variable to a numeric with values starting from 0. For example, if there are 3 levels in the factor variable, the numeric variable will contain values 0,1,2.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;You also need to set the objective to&amp;#160;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;multi:softmax&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;(predicts classes) or&amp;#160;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;multi:softprob&amp;#160;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;(predicts probabilities) and enter the &amp;#160;number of classes in the number of classes textbox.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;The number of classes must be entered only for&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;multi:softmax and&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;multi:softprob . Errors will be generated if number of classes is entered for the other objectives.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;See Data &amp;gt; Recode Variables. Alternately just convert the factor variable to numeric, typically the levels will get mapped to integers starting from 1 and subtract 1 from the resulting variable. This will give you a numeric variable with values starting from 0.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;2. You need to dummy code independent factor variables, use 1-Hot encoding see Data &amp;gt; Compute Dummy Variables&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;3. A confusion matrix and ROC curve is not generated when the objective selected is one of reg:squarederror, reg:logistic, binary:logitraw and rank:pairwise as the predict function &lt;br/&gt;does not return the class of the dependent variable. The numeric predictions &lt;br/&gt;(in the case of reg:squarederror), scores, ranks etc that the predict function returns &lt;br/&gt;are stored in the dataset. See help(predict.xgb.Booster) for more details&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;4. A confusion matrix is not generated when the objective selected is&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;multi:softprob&amp;#160;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;as the predict function returns the predicted probabilities and not the class of the dependent variable. The predicted probabilities are saved in the dataset and the ROC curve is generated. To see the confusion matrix, select multi:softmax as the objective&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;5. A ROC curve is not generated when the objective of multi:softmax is selected as the predict function returns the class and not the predicted probabilities. To see the ROC curve select&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;multi:softprob as the objective&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;xgboost(data = NULL, label = NULL, missing = NA, weight = NULL,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;params = list(), nrounds, verbose = 1, print_every_n = 1L,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;early_stopping_rounds = NULL, maximize = NULL, save_period = NULL,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;save_name = &amp;quot;xgboost.model&amp;quot;, xgb_model = NULL, callbacks = list(), ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;params&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;the list of parameters. The complete list of parameters is available at http://xgboost.readthedocs.io/en/latest/parameter.html. Below is a shorter summary:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;1. General Parameters&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;This dialog uses gbtree (tree booster)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;2. Booster Parameters&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;2.1. Parameter for Tree Booster&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;eta: &amp;#160;control the learning rate: scale the contribution of each tree by a factor of 0 &amp;lt; eta &amp;lt; 1 when it is added to the current approximation.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Used to prevent overfitting by making the boosting process more conservative.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Lower value for eta implies larger value for nrounds: low eta value means model more robust to overfitting but slower to compute. Default: 0.3&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;gamma: minimum loss reduction required to make a further partition on a leaf node of the tree. the larger, the more conservative the algorithm will be.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;max_depth: maximum depth of a tree. Default: 6&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;min_child_weight: minimum sum of instance weight (hessian) needed in a child. If the tree partition step results in a leaf node with the sum of instance weight less than min_child_weight,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;then the building process will give up further partitioning. In linear regression mode, this simply corresponds to minimum number of instances needed to be in each node.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The larger, the more conservative the algorithm will be. Default: 1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;3. Task Parameters&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;objective: specify the learning task and the corresponding learning objective, users can pass a self-defined function to it. The default objective options are below:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;reg:squarederror Regression with squared loss (Default).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;reg:logistic logistic regression.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;binary:logistic logistic regression for binary classification. Output probability.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;binary:logitraw logistic regression for binary classification, output score before logistic transformation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;num_class set the number of classes. To use only with multiclass objectives.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;multi:softmax set xgboost to do multiclass classification using the softmax objective. Class is represented by a number and should be from 0 to num_class - 1.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;multi:softprob same as softmax, but prediction outputs a vector of ndata * nclass elements, which can be further reshaped to ndata, nclass matrix. The result contains predicted probabilities of each data point belonging to each class.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;rank:pairwise set xgboost to do ranking task by minimizing the pairwise loss.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;base_score: the initial prediction score of all instances, global bias. Default: 0.5&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;eval_metric: evaluation metrics for validation data. Users can pass a self-defined function to it. Default: metric will be assigned according to objective(rmse for regression,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;and error for classification, mean average precision for ranking). List is provided in detail section.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;data: training dataset. xgb.train accepts only an xgb.DMatrix as the input. xgboost, in addition, also accepts matrix, dgCMatrix, or name of a local data file.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;nrounds:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;max number of boosting iterations.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;verbose:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;If 0, xgboost will stay silent. If 1, it will print information about performance. If 2, some additional information will be printed out. Note that setting verbose &amp;gt; 0 automatically engages the cb.print.evaluation(period=1) callback function.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;print_every_n:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Print each n-th iteration evaluation messages when verbose&amp;gt;0. Default is 1 which means all messages are printed. This parameter is passed to the cb.print.evaluation callback.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;label:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;vector of response values. Should not be provided when data is a local data file name or an xgb.DMatrix.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;missing:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;by default is set to NA, which means that NA values should be considered as 'missing' by the algorithm. Sometimes, 0 or other extreme value might be used to represent missing values. This parameter is only used when input is a dense matrix.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The evaluation metric is chosen automatically by Xgboost (according to the objective) when the eval_metric parameter is not provided.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;User may set one or several eval_metric parameters. Note that when using a customized metric, only this single metric can be used. The following is the list of built-in metrics for which Xgboost provides optimized implementation:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;rmse root mean square error. http://en.wikipedia.org/wiki/Root_mean_square_error&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;logloss negative log-likelihood. http://en.wikipedia.org/wiki/Log-likelihood&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;mlogloss multiclass logloss. http://wiki.fast.ai/index.php/Log_Loss&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;error Binary classification error rate. It is calculated as (# wrong cases) / (# all cases). By default, it uses the 0.5 threshold for predicted values to define negative and positive instances.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Different threshold (e.g., 0.) could be specified as &amp;quot;error@0.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;merror Multiclass classification error rate. It is calculated as (# wrong cases) / (# all cases).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;auc Area under the curve. http://en.wikipedia.org/wiki/Receiver_operating_characteristic#'Area_under_curve for ranking evaluation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;aucpr Area under the PR curve. https://en.wikipedia.org/wiki/Precision_and_recall for ranking evaluation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;ndcg Normalized Discounted Cumulative Gain (for ranking task). http://en.wikipedia.org/wiki/NDCG&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The following callbacks are automatically created when certain parameters are set:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;cb.print.evaluation is turned on when verbose &amp;gt; 0; and the print_every_n parameter is passed to it.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;cb.evaluation.log is on when watchlist is present.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;cb.early.stop: when early_stopping_rounds is set.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;cb.save.model: when save_period &amp;gt; 0 is set.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;An object of class xgb.Booster with the following elements:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;handle a handle (pointer) to the xgboost model in memory.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;raw a cached memory dump of the xgboost model saved as R's raw type.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;niter: number of boosting iterations.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;evaluation_log: evaluation history stored as a data.table with the first column corresponding to iteration number and the rest corresponding to evaluation metrics' values. It is created by the cb.evaluation.log callback.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;call: a function call.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;params: parameters that were passed to the xgboost library. Note that it does not capture parameters changed by the cb.reset.parameters callback.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;callbacks callback functions that were either automatically assigned or explicitly passed.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;best_iteration: iteration number with the best evaluation metric value (only available with early stopping).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;best_ntreelimit: the ntreelimit value corresponding to the best iteration, which could further be used in predict method (only available with early stopping).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;best_score: the best evaluation metric value during early stopping. (only available with early stopping).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;feature_names: names of the training dataset features (only when column names were defined in training data).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;nfeatures: number of features in training data.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;References&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Tianqi Chen and Carlos Guestrin, &amp;quot;XGBoost: A Scalable Tree Boosting System&amp;quot;, 22nd SIGKDD Conference on Knowledge Discovery and Data Mining, 2016, https://arxiv.org/abs/1603.02754&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;See Also&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;callbacks, predict.xgb.Booster, xgb.cv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;data(agaricus.train, package='xgboost')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;data(agaricus.test, package='xgboost')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## A simple xgb.train example:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;# These functions could be used by passing them either:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## An 'xgboost' interface example:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;bst &amp;lt;- xgboost(data = agaricus.train$data, label = agaricus.train$label,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;max_depth = 2, eta = 1, nthread = 2, nrounds = 2,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;objective = &amp;quot;binary:logistic&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;pred &amp;lt;- predict(bst, agaricus.test$data)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(xgboost, package ='xgboost')" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="260" Height="269" Left="7.33333333333337" Top="71" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="7.33333333333337" av:Canvas.Top="71" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma|Enclosed|CreateArray" ordlevels="" nomlevels="" Name="independentvars" AutoVar="True" renderVars="False" Filter="Numeric|Scale" Width="258" Height="143" Left="309" Top="197" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="309" av:Canvas.Top="197" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="seed" Text="12345" Step="1" Width="83" Height="22" Left="80" Top="354" CanExecute="True" IsEnabled="True" av:Canvas.Left="80" av:Canvas.Top="354"></BSkySpinnerCtrl><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="basescore" Text="0.5" Step="0.1" Width="83" Height="22" Left="483" Top="587" CanExecute="True" IsEnabled="True" av:Canvas.Left="483" av:Canvas.Top="587"></BSkySpinnerCtrl><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="nrounds" Text="5" Step="1" Width="83" Height="22" Left="374" Top="354" CanExecute="True" IsEnabled="True" av:Canvas.Left="374" av:Canvas.Top="354"></BSkySpinnerCtrl><BSkyGroupingVariable Name="dependentvar" Width="255" Height="30" Left="311" Top="132" Filter="Numeric|Scale" CanExecute="True" SubstituteSettings="NoPrefix|UseComma" Enabled="True" PrefixTxt="" SepCharacter="" nomlevels="" ordlevels="" Syntax="%%VALUE%%" IsEnabled="True" av:Canvas.Left="311" av:Canvas.Top="132"><BSkyGroupingVariable.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyGroupingVariable.SelectionChangeBehaviour><SingleItemList CanExecute="True" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" AutoVar="True" renderVars="False" Filter="Numeric|Scale" Left="NaN" Top="NaN" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True" Focusable="True" av:Grid.IsSharedSizeScope="True"><SingleItemList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></SingleItemList.SelectionChangeBehaviour><SingleItemList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></SingleItemList.Template><SingleItemList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></SingleItemList.Style></SingleItemList></BSkyGroupingVariable><BSkyLabel Name="srclbl" Text="Source Variables" Width="140" Height="25" Left="4" Top="42" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="4" av:Canvas.Top="42">Source Variables</BSkyLabel><BSkyLabel Name="lbl2" Text="Dependent Variable" Width="217" Height="26" Left="305" Top="104" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="104">Dependent Variable</BSkyLabel><BSkyLabel Name="lbl3" Text="Independent Variables (one or more)" Width="206.333333333333" Height="26.6666666666667" Left="305" Top="171" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="171">Independent Variables (one or more)</BSkyLabel><BSkyLabel Name="lbl5" Text="gamma" Width="100.333333333333" Height="28.6666666666667" Left="303" Top="454" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="303" av:Canvas.Top="454">gamma</BSkyLabel><BSkyVariableMoveButton Name="mov1" InputList="src" TargetList="dependentvar" Width="30" Height="30" Left="270" Top="130" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="270" av:Canvas.Top="130"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="mov2" InputList="src" TargetList="independentvars" Width="30" Height="30" Left="270" Top="196" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="270" av:Canvas.Top="196"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabel Name="lab60" Text="Set Seed" Width="63.3333333333333" Height="26.3333333333333" Left="3" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="350">Set Seed</BSkyLabel><BSkyLabelReqdField Name="rq1" Text="*" Width="27" Height="21" Left="410" Top="98" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="410" av:Canvas.Top="98">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="26" Left="503" Top="163" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="503" av:Canvas.Top="163">*</BSkyLabelReqdField><BSkyLabel Name="etalab" Text="eta (learning rate)" Width="128" Height="26" Left="303" Top="405" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="303" av:Canvas.Top="405">eta (learning rate)</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="model" Width="100" Height="30" Left="310" Top="72" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="310" av:Canvas.Top="72"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>xgboostModel</BSkyTextBox><BSkyLabel Name="labmod" Text="Enter a model name" Width="118" Height="24" Left="305" Top="44" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="44">Enter a model name</BSkyLabel><BSkyLabelReqdField Name="jj" Text="*" Width="15" Height="25" Left="412" Top="37" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="412" av:Canvas.Top="37">*</BSkyLabelReqdField><BSkyLabel Name="maxdepthlab" Text="maximum depth" Width="98" Height="28" Left="4" Top="405" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="4" av:Canvas.Top="405">maximum depth</BSkyLabel><BSkyButton Name="btn" Text="Options" Width="60" Height="30" Left="503" Top="53" Designer="{x:Null}" CanExecute="True" Enabled="True" IsEnabled="True" av:Canvas.Left="503" av:Canvas.Top="53"><BSkyButton.ClickBehaviour><BehaviourCollection Capacity="0" /></BSkyButton.ClickBehaviour><BSkyButton.Resources><BSkyCanvas internalhelpfilename="{x:Null}" Title="Options" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="{x:Null}" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="No entry required for a subdialog" dlgsyntax="No entry required for a subdialog" Helpfile="{x:Null}" splitProcessing="True" DatasetRequired="True" MenuLocation="No entry required for a subdialog" OutputDefinition="No entry required for a subdialog" Width="470" Command="False" Height="150" HelpText="{x:Null}" RHelpText="{x:Null}" Background="#FFEEEFFF" Focusable="True" x:Key="dlg"><BSkyLabel Name="lablifesign" Text="Verbose mode (0=Silent, 1=performance info, 2= other info)" Width="333" Height="27" Left="10" Top="36" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="400" av:Canvas.Left="10" av:Canvas.Top="36">Verbose mode (0=Silent, 1=performance info, 2= other info)</BSkyLabel><BSkyNonEditableComboBox Name="Verbose" NothingSelected="0" Width="83" Height="25" Left="368" Top="37" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="0" IsEnabled="True" av:Canvas.Left="368" av:Canvas.Top="37"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>0</s:String><s:String>1</s:String><s:String>2</s:String></BSkyNonEditableComboBox><BSkyLabel Name="printeverynlab" Text="Print each n-th iteration evaluation messages when verbose &gt; 0" Width="357" Height="32" Left="11" Top="75" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="400" av:Canvas.Left="11" av:Canvas.Top="75">Print each n-th iteration evaluation messages when verbose &gt; 0</BSkyLabel><BSkyNonEditableComboBox Name="printevery" NothingSelected="1" Width="83" Height="25" Left="368" Top="77" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="0" IsEnabled="True" av:Canvas.Left="368" av:Canvas.Top="77"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>0</s:String><s:String>1</s:String></BSkyNonEditableComboBox></BSkyCanvas></BSkyButton.Resources>Options</BSkyButton><BSkyLabel Name="labDummy" Text="DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS A.K.A 1" Width="578" Height="28" Left="2" Top="0" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="2" av:Canvas.Top="0">DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS A.K.A 1</BSkyLabel><BSkyLabel Name="LABSC" Text="HOT ENCODING). FOR PREDICTING MULTIPLE CLASSES, READ HELP (CLICK  &gt; ABOVE HELP ON DIALOG)." Width="570" Height="25" Left="2" Top="19" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="2" av:Canvas.Top="19" xml:space="preserve">HOT ENCODING). FOR PREDICTING MULTIPLE CLASSES, READ HELP (CLICK  &gt; ABOVE HELP ON DIALOG).</BSkyLabel><BSkyLabel Name="minchildweightlab" Text="minimum child weight" Width="135" Height="29" Left="4" Top="456" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="4" av:Canvas.Top="456">minimum child weight</BSkyLabel><BSkyAdvancedSlider SliderValue="0" Name="gamma" Maximum="10" Minimum="0" TickFrequency="1" Width="135" Height="45" Left="415" Top="445" Enabled="True" CanExecute="True" Syntax="{x:Null}" IsEnabled="True" av:Canvas.Left="415" av:Canvas.Top="445"></BSkyAdvancedSlider><BSkyAdvancedSlider SliderValue="0.3" Name="eta" Maximum="1" Minimum="0" TickFrequency="0.1" Width="135" Height="45" Left="415" Top="393" Enabled="True" CanExecute="True" Syntax="{x:Null}" IsEnabled="True" av:Canvas.Left="415" av:Canvas.Top="393"></BSkyAdvancedSlider><BSkyAdvancedSlider SliderValue="1" Name="minchldweight" Maximum="10" Minimum="0" TickFrequency="1" Width="135" Height="45" Left="145" Top="450" Enabled="True" CanExecute="True" Syntax="{x:Null}" IsEnabled="True" av:Canvas.Left="145" av:Canvas.Top="450"></BSkyAdvancedSlider><BSkyAdvancedSlider SliderValue="6" Name="maxdepth" Maximum="10" Minimum="0" TickFrequency="1" Width="135" Height="45" Left="145" Top="400" Enabled="True" CanExecute="True" Syntax="{x:Null}" IsEnabled="True" av:Canvas.Left="145" av:Canvas.Top="400"></BSkyAdvancedSlider><BSkyGroupBox Name="grp1" HeaderText="Parameters for Tree Boosting" Text="{x:Null}" Width="570" Height="171" Left="3" Top="381" Header="Parameters for Tree Boosting" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="3" av:Canvas.Top="381" /><BSkyLabel Name="maxdeltasteplab" Text="maximum delta step" Width="126" Height="26" Left="4" Top="509" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="4" av:Canvas.Top="509">maximum delta step</BSkyLabel><BSkyAdvancedSlider SliderValue="0" Name="maxdeltastep" Maximum="10" Minimum="0" TickFrequency="1" Width="135" Height="45" Left="145" Top="502" Enabled="True" CanExecute="True" Syntax="{x:Null}" IsEnabled="True" av:Canvas.Left="145" av:Canvas.Top="502"></BSkyAdvancedSlider><BSkyGroupBox Name="taskparams" HeaderText="Task Parameters" Text="{x:Null}" Width="572" Height="72" Left="4" Top="559" Header="Task Parameters" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="4" av:Canvas.Top="559" /><BSkyLabel Name="objlabel" Text="objective" Width="62" Height="28" Left="4" Top="582" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="4" av:Canvas.Top="582">objective</BSkyLabel><BSkyNonEditableComboBox Name="objective" NothingSelected="{x:Null}" Width="100" Height="25" Left="66" Top="584" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="reg:squarederror" IsEnabled="True" av:Canvas.Left="66" av:Canvas.Top="584"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>reg:squarederror</s:String><s:String>reg:logistic</s:String><s:String>binary:logistic</s:String><s:String>binary:logitraw</s:String><s:String>multi:softmax</s:String><s:String>multi:softprob</s:String><s:String>rank:pairwise</s:String></BSkyNonEditableComboBox><BSkyLabel Name="classlab" Text="Number of classes**" Width="118" Height="29" Left="190" Top="582" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="190" av:Canvas.Top="582">Number of classes**</BSkyLabel><BSkyLabel Name="basescorelab" Text="base score" Width="67" Height="25" Left="410" Top="583" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="410" av:Canvas.Top="583">base score</BSkyLabel><BSkyLabel Name="maxlab" Text="Max no of boosting iterations" Width="176" Height="30" Left="192" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="192" av:Canvas.Top="350">Max no of boosting iterations</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="numclasses" Width="47.0000000000001" Height="28" Left="310" Top="581" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="310" av:Canvas.Top="581" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="0" /></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyLabel Name="laxcc" Text="**Use only with multi:softmax and multi:softprob" Width="271" Height="34" Left="190" Top="605" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="190" av:Canvas.Top="605">**Use only with multi:softmax and multi:softprob</BSkyLabel></BSkyCanvas>