<BSkyCanvas internalhelpfilename="{x:Null}" Title="One Way Anova with Blocks" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="FSA;car;emmeans;ggplot2" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="local({&#xA;#Use Summarize to check if cell sizes are balanced&#xA;BSkyFormat(FSA::Summarize({{tvarbox1}} ~ {{tvarbox2}} ,data={{%DATASET%}},digits=3),singleTableOutputHeader=&quot;Summaries for fixed effect&quot;)&#xA;&#xA;#Use Summarize with fixed and blocking variables&#xA;temp=&quot;FSA::Summarize({{tvarbox1}} ~ {{tvarbox2}}+{{blockVar}} ,data={{%DATASET%}},digits=3)&quot;&#xA;temp =str_replace_all(temp,&quot;[+]&quot;,&quot;*&quot;)&#xA;if (str_count(string=temp,pattern=&quot;[*]&quot;) &lt;=1)&#xA;{&#xA;resSummFixedandBlockvars =eval(parse(text =temp))&#xA;#Use Summarize with fixed and blocking variables&#xA;BSkyFormat(resSummFixedandBlockvars,singleTableOutputHeader=&quot;Summaries for fixed effect and blocking variables&quot;)&#xA;}&#xA;else&#xA;{&#xA;cat(&quot;Summaries for fixed effect and blocking variables cannot be computed with a quantitative response {{tvarbox1}}&quot;)&#xA;}&#xA;&#xA;#Define a linear model&#xA;model = stats::lm({{tvarbox1}} ~{{tvarbox2}} +{{blockVar}}, data = {{%DATASET%}})&#xA;### Will show overall p-value and r-squared&#xA;BSkyFormat(summary(model))&#xA;&#xA;#Conduct analysis of variance&#xA;BSkyFormat(as.data.frame(car::Anova(model, type = &quot;II&quot;)), singleTableOutputHeader=&quot;Analysis of Variance&quot;)&#xA;&#xA;if ({{chk1}})&#xA;{&#xA;#Histogram and plot of residuals&#xA;dataframeResiduals =data.frame(residuals=stats::residuals(model))&#xA;print(ggplot2::ggplot(dataframeResiduals, aes(x=dataframeResiduals$residuals))+ geom_histogram( colour=&quot;black&quot;, aes(y=..density.., fill=..count..))+ stat_function(fun=dnorm,color=&quot;red&quot;,args=list(mean=mean(dataframeResiduals$residuals), sd=sd(dataframeResiduals$residuals)))  + labs(x = &quot;Residuals&quot;, title=&quot;                                  Histogram plot of model residuals&quot;))&#xA;&#xA;#Plot residuals vs. fitted&#xA;plot(fitted(model), residuals(model),main =&quot;Residuals vs. Fitted&quot;)&#xA;}&#xA;&#xA;if ({{chk2}})&#xA;{&#xA;#pairwise comparisons&#xA;marginal = emmeans::lsmeans(model,   ~ {{tvarbox2}})&#xA;pairwiseComparisons &lt;-graphics::pairs(marginal,adjust=&quot;tukey&quot;)&#xA;BSkyFormat(as.data.frame(pairwiseComparisons) , singleTableOutputHeader=&quot;Pairwise comparisons&quot;)&#xA;cat(sprintf(&quot;Results are averaged over levels of: %s \nP value adjustment: %s method for comparing a family of %d estimates&quot;,paste(pairwiseComparisons@misc$avgd.over, collapse=&quot;,&quot;),pairwiseComparisons@misc$adjust,pairwiseComparisons@misc$famSize  ))&#xA;&#xA;#Compact letter display of pairwise comparisons&#xA;### Use lower-case letters for .group&#xA;cldComparisons &lt;-emmeans::cld(marginal,alpha   = 0.05,  Letters = letters,  &#xA;          adjust  = &quot;tukey&quot;)&#xA;&#xA;BSkyFormat(as.data.frame(cldComparisons), singleTableOutputHeader=&quot;Compact letter display of pairwise comparisons&quot;)&#xA;cat(sprintf(&quot;%s\n%s \n%s \n%s&quot;,attr(cldComparisons,&quot;mesg&quot;)[1],attr(cldComparisons,&quot;mesg&quot;)[2],attr(cldComparisons,&quot;mesg&quot;)[3],attr(cldComparisons,&quot;mesg&quot;)[4]))&#xA;}&#xA;})&#xA;&#xA;&#xA;&#xA;" dlgsyntax="local({&#xA;#Use Summarize to check if cell sizes are balanced&#xA;BSkyFormat(FSA::Summarize({{tvarbox1}} ~ {{tvarbox2}} ,data={{%DATASET%}},digits=3),singleTableOutputHeader=&quot;Summaries for fixed effect&quot;)&#xA;&#xA;#Use Summarize with fixed and blocking variables&#xA;temp=&quot;FSA::Summarize({{tvarbox1}} ~ {{tvarbox2}}+{{blockVar}} ,data={{%DATASET%}},digits=3)&quot;&#xA;temp =str_replace_all(temp,&quot;[+]&quot;,&quot;*&quot;)&#xA;if (str_count(string=temp,pattern=&quot;[*]&quot;) &lt;=1)&#xA;{&#xA;resSummFixedandBlockvars =eval(parse(text =temp))&#xA;#Use Summarize with fixed and blocking variables&#xA;BSkyFormat(resSummFixedandBlockvars,singleTableOutputHeader=&quot;Summaries for fixed effect and blocking variables&quot;)&#xA;}&#xA;else&#xA;{&#xA;cat(&quot;Summaries for fixed effect and blocking variables cannot be computed with a quantitative response {{tvarbox1}}&quot;)&#xA;}&#xA;&#xA;#Define a linear model&#xA;model = stats::lm({{tvarbox1}} ~{{tvarbox2}} +{{blockVar}}, data = {{%DATASET%}})&#xA;### Will show overall p-value and r-squared&#xA;BSkyFormat(summary(model))&#xA;&#xA;#Conduct analysis of variance&#xA;BSkyFormat(as.data.frame(car::Anova(model, type = &quot;II&quot;)), singleTableOutputHeader=&quot;Analysis of Variance&quot;)&#xA;&#xA;if ({{chk1}})&#xA;{&#xA;#Histogram and plot of residuals&#xA;dataframeResiduals =data.frame(residuals=stats::residuals(model))&#xA;print(ggplot2::ggplot(dataframeResiduals, aes(x=dataframeResiduals$residuals))+ geom_histogram( colour=&quot;black&quot;, aes(y=..density.., fill=..count..))+ stat_function(fun=dnorm,color=&quot;red&quot;,args=list(mean=mean(dataframeResiduals$residuals), sd=sd(dataframeResiduals$residuals)))  + labs(x = &quot;Residuals&quot;, title=&quot;                                  Histogram plot of model residuals&quot;))&#xA;&#xA;#Plot residuals vs. fitted&#xA;plot(fitted(model), residuals(model),main =&quot;Residuals vs. Fitted&quot;)&#xA;}&#xA;&#xA;if ({{chk2}})&#xA;{&#xA;#pairwise comparisons&#xA;marginal = emmeans::lsmeans(model,   ~ {{tvarbox2}})&#xA;pairwiseComparisons &lt;-graphics::pairs(marginal,adjust=&quot;tukey&quot;)&#xA;BSkyFormat(as.data.frame(pairwiseComparisons) , singleTableOutputHeader=&quot;Pairwise comparisons&quot;)&#xA;cat(sprintf(&quot;Results are averaged over levels of: %s \nP value adjustment: %s method for comparing a family of %d estimates&quot;,paste(pairwiseComparisons@misc$avgd.over, collapse=&quot;,&quot;),pairwiseComparisons@misc$adjust,pairwiseComparisons@misc$famSize  ))&#xA;&#xA;#Compact letter display of pairwise comparisons&#xA;### Use lower-case letters for .group&#xA;cldComparisons &lt;-emmeans::cld(marginal,alpha   = 0.05,  Letters = letters,  &#xA;          adjust  = &quot;tukey&quot;)&#xA;&#xA;BSkyFormat(as.data.frame(cldComparisons), singleTableOutputHeader=&quot;Compact letter display of pairwise comparisons&quot;)&#xA;cat(sprintf(&quot;%s\n%s \n%s \n%s&quot;,attr(cldComparisons,&quot;mesg&quot;)[1],attr(cldComparisons,&quot;mesg&quot;)[2],attr(cldComparisons,&quot;mesg&quot;)[3],attr(cldComparisons,&quot;mesg&quot;)[4]))&#xA;}&#xA;})&#xA;&#xA;&#xA;&#xA;" Helpfile="" splitProcessing="True" MenuLocation="{x:Null}" OutputDefinition="{x:Null}" Width="500" Command="False" Height="350" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-weight: bold; font-size: 16px; font-family: 'Times New Roman','Times New Roman'; line-height: normal } .c3 { margin: 0px 0px 10px; line-height: normal; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c4 { font-size: 16px; font-family: 'Times New Roman','Times New Roman'; font-weight: bold } .c5 { font-weight: bold } .c6 { margin: 0px; line-height: normal; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c7 { font-size: 13.3333333333333px; font-family: 'Arial','Arial' } .c8 { font-size: 13.3333333333333px; font-family: 'Arial','Arial'; color: Black; background-color: White } .c9 { font-size: 13.3333333333333px; font-family: 'Arial','Arial'; font-weight: bold } .c10 { margin: 0px 0px 11px; line-height: normal; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c11 { font-size: 13.3333333333333px; font-family: 'Arial','Arial'; color: Black } .c12 { margin: 0px 0px 15px; font-size: 18px; font-weight: bold; font-family: 'Times New Roman','Times New Roman'; background-color: White } .c13 { font-size: 13.3333333333333px; font-family: 'Arial','Arial'; color: #666666 } .c14 { margin: 0px; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c15 { font-family: 'Courier New' } .c16 { font-family: 'Arial','Arial' } .c17 { margin: 0px 0px 10px; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c18 { font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c19 { font-weight: bold; text-decoration: underline } .c20 { margin: 0px; line-height: 1.45454545454545; font-size: 16px; font-family: 'Times New Roman','Times New Roman' } .c21 { font-style: italic } .c22 { font-size: 12.6666666666667px; font-family: 'Lucida Console'; color: Blue; background-color: White } .c23 { font-size: 12.6666666666667px; font-family: 'Lucida Console'; color: Black; background-color: White } .c24 { font-size: 12.6666666666667px; font-family: 'Lucida Console'; color: Blue } .c25 { background-color: White; color: Black } .c26 { background-color: White } .c27 { font-family: 'Arial','Arial'; color: Black } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Anova {car}&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;Anova Tables for Various Statistical Models&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c5&quot;&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c5&quot;&gt;&lt;span class=&quot;c7&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Calculates type-II or type-III analysis-of-variance tables for model objects produced by lm, glm, multinom (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;nnet&lt;/span&gt;&lt;/span&gt;&amp;#160;package), polr (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;MASS&lt;/span&gt;&lt;/span&gt;&amp;#160;package), coxph (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;survival&lt;/span&gt;&lt;/span&gt;&amp;#160;package),coxme (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;coxme&lt;/span&gt;&lt;/span&gt;&amp;#160;pckage), svyglm (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;survey&lt;/span&gt;&lt;/span&gt;&amp;#160;package), rlm (in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;MASS&lt;/span&gt;&lt;/span&gt;&amp;#160;package), lmer in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;lme4&lt;/span&gt;&lt;/span&gt;&amp;#160;package, lme in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;nlme&lt;/span&gt;&lt;/span&gt;&amp;#160;package, and (by the default method) for most models with a linear predictor and asymptotically normal coefficients (see details below). For linear models, F-tests are calculated; for generalized linear models, likelihood-ratio chisquare, Wald chisquare, or F-tests are calculated; for multinomial logit and proportional-odds logit models, likelihood-ratio tests are calculated. Various test statistics are provided for multivariate linear models produced by lm or manova. Partial-likelihood-ratio tests or Wald tests are provided for Cox models. Wald chi-square tests are provided for fixed effects in linear and generalized linear mixed-effects models. Wald chi-square or F tests are provided in the default case.&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Usage&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Anova(mod, type='II,...)&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Arguments&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;mod &amp;#160;&amp;#160;&amp;#160;&amp;#160;-&amp;gt;lm, aov, glm, multinom, polr mlm, coxph, coxme, lme, mer, merMod, svyglm, rlm, or other suitable model object.&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;type &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;-&amp;gt;type of test, &amp;quot;II&amp;quot;, &amp;quot;III&amp;quot;, 2, or 3.&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Details&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c10&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;The designations &amp;quot;type-II&amp;quot; and &amp;quot;type-III&amp;quot; are borrowed from SAS, but the definitions used here do not correspond precisely to those employed by SAS. Type-II tests are calculated according to the principle of marginality, testing each term after all others, except ignoring the term's higher-order relatives; so-called type-III tests violate marginality, testing each term in the model after all of the others. This definition of Type-II tests corresponds to the tests produced by SAS for analysis-of-variance models, where all of the predictors are factors, but not more generally (i.e., when there are quantitative predictors). Be very careful in formulating the model for type-III tests, or the hypotheses tested will not make sense.&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c10&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;As implemented here, type-II Wald tests are a generalization of the linear hypotheses used to generate these tests in linear models.&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c10&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;For tests for linear models, multivariate linear models, and Wald tests for generalized linear models, Cox models, mixed-effects models, generalized linear models fit to survey data, and in the default case, Anova finds the test statistics without refitting the model. The svyglm method simply calls the default method and therefore can take the same arguments.&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c10&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c13&quot;&gt;Value&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span class=&quot;c11&quot;&gt;An object of class&amp;#160;&lt;span class=&quot;c15&quot;&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;anova&amp;quot;&lt;/span&gt;&lt;/span&gt;, or&amp;#160;&lt;span class=&quot;c15&quot;&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;Anova.mlm&amp;quot;&lt;/span&gt;&lt;/span&gt;, which usually is printed. For objects of class&amp;#160;&lt;span class=&quot;c15&quot;&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;Anova.mlm&amp;quot;&lt;/span&gt;&lt;/span&gt;, there is also a&amp;#160;&lt;span class=&quot;c15&quot;&gt;&lt;span class=&quot;c16&quot;&gt;summary&lt;/span&gt;&lt;/span&gt;&amp;#160;method, which provides much more detail than the&amp;#160;&lt;span class=&quot;c15&quot;&gt;&lt;span class=&quot;c16&quot;&gt;print&lt;/span&gt;&lt;/span&gt;&amp;#160;method about the MANOVA, including traditional mixed-model univariate F-tests with Greenhouse-Geisser and Huynh-Feldt corrections.&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c17&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c18&quot;&gt;&lt;span class=&quot;c19&quot;&gt;R help&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c17&quot;&gt;&lt;span class=&quot;c11&quot;&gt;help(car, package=’Anova')&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c17&quot;&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c17&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;emmeans {lsmeans}&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Post-hoc mean separation tests&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c20&quot;&gt;&lt;span class=&quot;c11&quot;&gt;To perform post-hoc mean separation tests for each main effect factor variable we will use the&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;emmeans&lt;/span&gt;&lt;/span&gt;&amp;#160;package. &amp;#160;The linear model under consideration is called&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;model&lt;/span&gt;&lt;/span&gt;, created the&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;lm&lt;/span&gt;&lt;/span&gt;&amp;#160;function above. &amp;#160;The formula in the&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;lsmeans&lt;/span&gt;&lt;/span&gt;&amp;#160;function indicates that&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;pairwise&lt;/span&gt;&lt;/span&gt;&amp;#160;comparisons should be conducted for the variable&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;Country&lt;/span&gt;&lt;/span&gt;&amp;#160;in the first call, and for the variable&amp;#160;&lt;span&gt;&lt;span class=&quot;c21&quot;&gt;Diet&lt;/span&gt;&lt;/span&gt;&amp;#160;in the second call.&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span class=&quot;c22&quot;&gt;&lt;span&gt;&lt;span class=&quot;c0&quot;&gt;Usage:&lt;/span&gt;&lt;/span&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span&gt;&lt;span class=&quot;c23&quot;&gt;lsmeans(model,&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c24&quot;&gt;&lt;span&gt;&lt;span class=&quot;c0&quot;&gt;&lt;br/&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c25&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;var1 ~ var2,&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c0&quot;&gt;&lt;br/&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;&lt;span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;adjust=&amp;quot;tukey&amp;quot;)&amp;#160;&lt;/span&gt;&lt;/span&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c17&quot;&gt;&lt;span&gt;&lt;span class=&quot;c19&quot;&gt;R help&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c14&quot;&gt;&lt;span class=&quot;c11&quot;&gt;help(lsmeans, package=’emmeans)&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c10&quot;&gt;&lt;span&gt;&lt;span class=&quot;c27&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;References&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;span class=&quot;c18&quot;&gt;http://rcompanion.org/handbook/I_06.html&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(Anova, package='car')" Background="#FFEDEFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="{x:Null}" nomlevels="{x:Null}" Name="svarbox1" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Ordinal|Nominal|Scale" Width="210" Height="314" Left="10" Top="28" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="10" av:Canvas.Top="28" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="1" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="tvarbox1" AutoVar="True" renderVars="False" Filter="Numeric|Scale" Width="210" Height="30" Left="263" Top="29" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="263" av:Canvas.Top="29" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="tvarbox1" PropertyName="CanExecute" Value="FALSE" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="tvarbox1" PropertyName="CanExecute" Value="TRUE" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="1" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="tvarbox2" AutoVar="True" renderVars="False" Filter="String|Numeric|Logical|Ordinal|Nominal" Width="210" Height="30" Left="263" Top="93" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="263" av:Canvas.Top="93" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="LessThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="tvarbox2" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="tvarbox2" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UsePlus" ordlevels="" nomlevels="" Name="blockVar" AutoVar="True" renderVars="False" Filter="String|Numeric|Logical|Ordinal|Nominal" Width="210" Height="132" Left="263" Top="155" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="263" av:Canvas.Top="155" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="blockVar" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="blockVar" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyLabel Name="svar1" Text="Source Variables" Width="101" Height="26" Left="6" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="6" av:Canvas.Top="3">Source Variables</BSkyLabel><BSkyLabel Name="tvar1" Text="Response Variable (one)" Width="151" Height="24" Left="258" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="258" av:Canvas.Top="3">Response Variable (one)</BSkyLabel><BSkyLabel Name="tvar2" Text="Fixed Effect" Width="152" Height="24" Left="258" Top="67" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="258" av:Canvas.Top="67">Fixed Effect</BSkyLabel><BSkyVariableMoveButton Name="mov1" InputList="svarbox1" TargetList="tvarbox1" Width="30" Height="28" Left="225" Top="28" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="225" av:Canvas.Top="28"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="mov2" InputList="svarbox1" TargetList="tvarbox2" Width="30" Height="30" Left="225" Top="92" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="225" av:Canvas.Top="92"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabel Name="lab43" Text="Blocking variable(s)" Width="141" Height="26" Left="258" Top="130" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="258" av:Canvas.Top="130">Blocking variable(s)</BSkyLabel><BSkyVariableMoveButton Name="mov3" InputList="svarbox1" TargetList="blockVar" Width="30" Height="30" Left="225" Top="155" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="225" av:Canvas.Top="155"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyCheckBox Name="chk1" Text="Histogram and plot of residuals" Width="206" Height="20" Left="263" Top="301" IsSelected="True" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="263" av:Canvas.Top="301"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Histogram and plot of residuals</BSkyCheckBox><BSkyCheckBox Name="chk2" Text="Post-hoc analysis" Width="144" Height="21" Left="263" Top="323" IsSelected="True" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="263" av:Canvas.Top="323"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Post-hoc analysis</BSkyCheckBox><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="387" Top="0" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="387" av:Canvas.Top="0">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="319" Top="64" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="319" av:Canvas.Top="64">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq3" Text="*" Width="15" Height="25" Left="361" Top="127" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="361" av:Canvas.Top="127">*</BSkyLabelReqdField></BSkyCanvas>