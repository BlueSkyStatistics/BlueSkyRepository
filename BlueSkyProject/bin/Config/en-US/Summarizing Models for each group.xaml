<BSkyCanvas internalhelpfilename="{x:Null}" Title="Group By Modeling" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="broom;dplyr" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="local({&#xA;if ({{rd1}}{{rd2}}==&quot;DisplayResultsInOutput&quot;)&#xA;{&#xA;if (&quot;{{modelselected}}&quot;==&quot;Multinomial Logistic&quot;)&#xA;{&#xA;m1=LoadPackage(&quot;nnet&quot;)&#xA;if (!grepl(&quot;ERROR&quot;, m1)) &#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;glanceResults &lt;-do(by_{{%DATASET%}}, glance( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, tidy( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, augment( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Anova&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;                glanceResults &lt;-do(by_{{%DATASET%}}, &#xA;glance( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, &#xA;tidy( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, &#xA;augment( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Regression&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;glanceResults &lt;-do(by_{{%DATASET%}}, &#xA;glance( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, &#xA;tidy( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, &#xA;augment( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;&#xA;}&#xA;}&#xA;&#xA;if ({{rd1}}{{rd2}} ==&quot;SaveResultsToDatasets&quot;)&#xA;{&#xA;if (&quot;{{modelselected}}&quot;==&quot;Multinomial Logistic&quot;)&#xA;{&#xA;m1=LoadPackage(&quot;nnet&quot;)&#xA;if (!grepl(&quot;ERROR&quot;, m1)) &#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;&#xA;{{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, glance( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, tidy( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, augment( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Anova&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;                {{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, &#xA;glance( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;tidy( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;augment( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Regression&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;{{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, &#xA;glance( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;tidy( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;augment( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;&#xA;}&#xA; &#xA;&#xA;}&#xA;}&#xA;) &#xA;&#xA;if (exists(&quot;{{prefixName}}Glance_Results&quot;))&#xA;{&#xA;{{prefixName}}Glance_Results &lt;&lt;- as.data.frame({{prefixName}}Glance_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Glance_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Glance_Results,load.dataframe=BSkyDoesDatasetExist)&#xA;&#xA;if (exists(&quot;{{prefixName}}Tidy_Results&quot;))&#xA;{&#xA;{{prefixName}}Tidy_Results &lt;&lt;- as.data.frame({{prefixName}}Tidy_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Tidy_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Tidy_Results,load.dataframe=BSkyDoesDatasetExist))&#xA;&#xA;if (exists(&quot;{{prefixName}}Augment_Results&quot;))&#xA;{&#xA;{{prefixName}}Augment_Results &lt;&lt;- as.data.frame({{prefixName}}Augment_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Augment_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Augment_Results,load.dataframe=BSkyDoesDatasetExist)&#xA;if (exists(&quot;BSkyDoesDatasetExist&quot;))&#xA;{&#xA;rm(BSkyDoesDatasetExist)&#xA;}" dlgsyntax="local({&#xA;if ({{rd1}}{{rd2}}==&quot;DisplayResultsInOutput&quot;)&#xA;{&#xA;if (&quot;{{modelselected}}&quot;==&quot;Multinomial Logistic&quot;)&#xA;{&#xA;m1=LoadPackage(&quot;nnet&quot;)&#xA;if (!grepl(&quot;ERROR&quot;, m1)) &#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;glanceResults &lt;-do(by_{{%DATASET%}}, glance( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, tidy( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, augment( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Anova&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;                glanceResults &lt;-do(by_{{%DATASET%}}, &#xA;glance( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, &#xA;tidy( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, &#xA;augment( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Regression&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;glanceResults &lt;-do(by_{{%DATASET%}}, &#xA;glance( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;tidyResults&lt;-do(by_{{%DATASET%}}, &#xA;tidy( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;augmentResults&lt;-do(by_{{%DATASET%}}, &#xA;augment( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;&#xA;}&#xA;}&#xA;&#xA;if ({{rd1}}{{rd2}} ==&quot;SaveResultsToDatasets&quot;)&#xA;{&#xA;if (&quot;{{modelselected}}&quot;==&quot;Multinomial Logistic&quot;)&#xA;{&#xA;m1=LoadPackage(&quot;nnet&quot;)&#xA;if (!grepl(&quot;ERROR&quot;, m1)) &#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;&#xA;{{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, glance( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, tidy( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, augment( multinom({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Anova&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;                {{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, &#xA;glance( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;tidy( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;augment( aov({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;}&#xA;else if (&quot;{{modelselected}}&quot;==&quot;Regression&quot;)&#xA;{&#xA;by_{{%DATASET%}}= group_by({{%DATASET%}},{{grp1}})&#xA;{{prefixName}}Glance_Results &lt;&lt;-do(by_{{%DATASET%}}, &#xA;glance( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(glanceResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Glance&quot;)&#xA;&#xA;{{prefixName}}Tidy_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;tidy( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(tidyResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Tidy&quot;)&#xA;&#xA;{{prefixName}}Augment_Results&lt;&lt;-do(by_{{%DATASET%}}, &#xA;augment( lm({{dependent}} ~ {{independent}}, data = .)))&#xA;#BSkyFormat(as.data.frame(augmentResults),decimalDigitsRounding=4,engNotationSetting=BSkyGetEngNotationSetting(),singleTableOutputHeader=&quot;Model Statistics for each group as returned by the function Augment&quot;)&#xA;&#xA;}&#xA; &#xA;&#xA;}&#xA;}&#xA;) &#xA;&#xA;if (exists(&quot;{{prefixName}}Glance_Results&quot;))&#xA;{&#xA;{{prefixName}}Glance_Results &lt;&lt;- as.data.frame({{prefixName}}Glance_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Glance_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Glance_Results,load.dataframe=BSkyDoesDatasetExist)&#xA;&#xA;if (exists(&quot;{{prefixName}}Tidy_Results&quot;))&#xA;{&#xA;{{prefixName}}Tidy_Results &lt;&lt;- as.data.frame({{prefixName}}Tidy_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Tidy_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Tidy_Results,load.dataframe=BSkyDoesDatasetExist))&#xA;&#xA;if (exists(&quot;{{prefixName}}Augment_Results&quot;))&#xA;{&#xA;{{prefixName}}Augment_Results &lt;&lt;- as.data.frame({{prefixName}}Augment_Results)&#xA;}&#xA;BSkyDoesDatasetExist =exists(&quot;{{prefixName}}Augment_Results&quot;)&#xA;BSkyLoadRefreshDataframe(dframe={{prefixName}}Augment_Results,load.dataframe=BSkyDoesDatasetExist)&#xA;if (exists(&quot;BSkyDoesDatasetExist&quot;))&#xA;{&#xA;rm(BSkyDoesDatasetExist)&#xA;}" Helpfile="{x:Null}" splitProcessing="False" MenuLocation="{x:Null}" OutputDefinition="{x:Null}" Width="540" Command="False" Height="480" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-size: 13.3333333333333px; font-weight: bold; text-decoration: underline; font-family: 'Lucida Grande' } .c3 { font-size: 13.3333333333333px; font-family: 'Lucida Grande' } .c4 { background-color: White; color: Black; font-family: 'Lucida Grande'; font-size: 13.3333333333333px; font-style: normal; text-align: center; text-decoration: none; text-indent: 0px } .c5 { background-color: Transparent; color: Black; font-family: 'Lucida Grande'; font-size: 13.3333333333333px; font-style: normal; font-weight: normal; text-align: left; text-decoration: none; text-indent: 0px } .c6 { background-color: Transparent; color: Black; font-family: 'Lucida Grande'; font-size: 13.3333333333333px; font-style: normal; font-weight: bold; text-align: left; text-decoration: underline; text-indent: 0px } .c7 { background-color: Transparent; color: Black; font-family: 'Times New Roman'; font-size: 16px; font-style: normal; font-weight: normal; text-align: left; text-decoration: none; text-indent: 0px } .c8 { background-color: White; color: #666666; font-family: 'Lucida Grande'; font-size: 13.3333333333333px; font-style: normal; text-align: center; text-decoration: none; text-indent: 0px } .c9 { background-color: Transparent; color: Black; font-family: 'Lucida Grande'; font-size: 13.3333333333333px; font-style: normal; text-align: left; text-decoration: none; text-indent: 0px } .c10 { font-weight: bold; font-size: 12px; text-decoration: underline } .c11 { font-size: 12px; font-family: 'Lucida Grande' } .c12 { font-size: 12px; font-weight: bold; text-decoration: underline; font-family: 'Lucida Grande' } .c13 { font-size: 13.3333333333333px; font-weight: bold; text-decoration: underline } .c14 { font-size: 13.3333333333333px } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Supports the creation of a model for groups within the dataset and displays the model statistics in a single output table to enable easy analysis of model information for each group&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;We use the following functions&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;glance&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;tidy&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;augment&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;#x200b;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;glance&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Construct a single row summary &amp;quot;glance&amp;quot; of a model, fit, or other object.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;glance methods always return either a one-row data frame (except on NULL, which returns an empty data frame)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;glance(x, ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;x&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;model or other R object to convert to single-row data frame&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;... other arguments passed to methods&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;tidy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Tidy the results of a model into a data fra&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;me.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;The output of tidy is always a data.frame with disposable row names. It is therefore suited for further manipulation by packages like dplyr, reshape2, ggplot2 and ggvis.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;tidy(x, ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;x&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;model or other R object to convert to single-row data frame&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;... other arguments passed to methods&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;augment&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Augment data according to a tidied model.&lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Given an R statistical model or other non-tidy object, add columns to the original dataset such as predictions, residuals and cluster assignments.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;augment(x, ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;x&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;model or other R object to convert to single-row data frame&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;... other arguments passed to methods&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c10&quot;&gt;Help&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;help(glance&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;, package=&amp;quot;broom&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;help(tidy&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;, package=&amp;quot;broom&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;help(augment,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;, package=&amp;quot;broom&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c11&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c12&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Packages:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;broom&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="" Background="#FFEEEFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="{x:Null}" nomlevels="{x:Null}" Name="source" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="243" Height="414" Left="4" Top="54" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="4" av:Canvas.Top="54" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="1" SubstituteSettings="NoPrefix|UseComma" ordlevels="{x:Null}" nomlevels="{x:Null}" Name="dependent" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="250" Height="30" Left="285" Top="208" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="285" av:Canvas.Top="208" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="dependent" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UsePlus" ordlevels="{x:Null}" nomlevels="{x:Null}" Name="independent" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="250" Height="202" Left="285" Top="266" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="285" av:Canvas.Top="266" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independent" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independent" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyGroupingVariable Name="grp1" Width="250" Height="30" Left="285" Top="148" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" CanExecute="False" SubstituteSettings="NoPrefix|UseComma" Enabled="True" PrefixTxt="" SepCharacter="" nomlevels="{x:Null}" ordlevels="{x:Null}" Syntax="%%VALUE%%" IsEnabled="True" av:Canvas.Left="285" av:Canvas.Top="148"><BSkyGroupingVariable.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="grp1" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="grp1" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyGroupingVariable.SelectionChangeBehaviour><SingleItemList CanExecute="False" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="{x:Null}" nomlevels="{x:Null}" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Left="NaN" Top="NaN" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True" Focusable="True" av:Grid.IsSharedSizeScope="True"><SingleItemList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="grp1" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="1" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="grp1" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></SingleItemList.SelectionChangeBehaviour><SingleItemList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></SingleItemList.Template><SingleItemList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></SingleItemList.Style></SingleItemList></BSkyGroupingVariable><BSkyLabel Name="l2" Text="Source Variables" Width="130" Height="25" Left="0" Top="27" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="0" av:Canvas.Top="27">Source Variables</BSkyLabel><BSkyLabel Name="l3" Text="Variable to Predict" Width="130" Height="25" Left="280" Top="183" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="280" av:Canvas.Top="183">Variable to Predict</BSkyLabel><BSkyLabel Name="l4" Text="Independent Variables" Width="140" Height="26" Left="281" Top="240" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="281" av:Canvas.Top="240">Independent Variables</BSkyLabel><BSkyVariableMoveButton Name="move1" InputList="source" TargetList="grp1" Width="30" Height="30" Left="248" Top="147" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="248" av:Canvas.Top="147"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="move2" InputList="source" TargetList="dependent" Width="30" Height="30" Left="248" Top="207" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="248" av:Canvas.Top="207"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyNonEditableComboBox Name="modelselected" NothingSelected="Regression" Width="250" Height="30" Left="286" Top="8" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="Regression" IsEnabled="True" av:Canvas.Left="286" av:Canvas.Top="8"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="4" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>Regression</s:String><s:String>Anova</s:String><s:String>Multinomial Logistic</s:String></BSkyNonEditableComboBox><BSkyLabel Name="lab201" Text="Select a model to compare statistics for each group" Width="284" Height="29" Left="0" Top="5" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="0" av:Canvas.Top="5">Select a model to compare statistics for each group</BSkyLabel><BSkyLabel Name="lab202" Text="Select the grouping variable" Width="185" Height="26" Left="280" Top="122" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="280" av:Canvas.Top="122">Select the grouping variable</BSkyLabel><BSkyVariableMoveButton Name="mv3" InputList="source" TargetList="independent" Width="30" Height="30" Left="248" Top="265" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="248" av:Canvas.Top="265"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyRadioButton GroupName="grp123" Name="rd1" Text="Display results in Output" Width="168" Left="0" Top="0" Height="17" IsSelected="True" CanExecute="True" Enabled="True" Syntax="&quot;DisplayResultsInOutput&quot;" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="290" av:Canvas.Top="65"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="prefixName" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Display results in Output</BSkyRadioButton><BSkyRadioButton GroupName="grp123" Name="rd2" Text="Enter prefix for datasets" Width="146" Left="0" Top="0" Height="20" IsSelected="False" CanExecute="True" Enabled="True" Syntax="&quot;SaveResultsToDatasets&quot;" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="290" av:Canvas.Top="90"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="prefixName" PropertyName="Enabled" Value="True" /><PropertySetter ControlName="prefixName" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="prefixName" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Enter prefix for datasets</BSkyRadioButton><BSkyGroupBox Name="grpn" HeaderText="Save results to output or to datasets" Text="{x:Null}" Width="253" Height="79" Left="285" Top="41" Header="Save results to output or to datasets" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="285" av:Canvas.Top="41" /><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="prefixName" Width="88" Height="30" Left="444" Top="82" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="False" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="False" av:Canvas.Left="444" av:Canvas.Top="82" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="prefixName" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="prefixName" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="prefixName" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="430" Top="119" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="430" av:Canvas.Top="119">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="381" Top="180" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="381" av:Canvas.Top="180">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq3" Text="*" Width="15" Height="25" Left="403" Top="237" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="403" av:Canvas.Top="237">*</BSkyLabelReqdField></BSkyCanvas>