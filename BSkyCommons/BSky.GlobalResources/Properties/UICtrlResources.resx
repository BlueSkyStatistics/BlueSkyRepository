<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AAA" xml:space="preserve">
    <value>AAA</value>
    <comment>AAA: .CS or. XAML name : Details : Comment</comment>
  </data>
  <data name="buttonHelp" xml:space="preserve">
    <value>Help</value>
    <comment>InspectDialog.xaml : help button text</comment>
  </data>
  <data name="buttonOk" xml:space="preserve">
    <value>OK</value>
    <comment>InspectDialog.xaml : ok button text</comment>
  </data>
  <data name="buttonSyntax" xml:space="preserve">
    <value>Syntax</value>
    <comment>InspectDialog.xaml : syntax button text</comment>
  </data>
  <data name="CommandEditorPanelTitle" xml:space="preserve">
    <value>R Command Editor</value>
    <comment>OutputWindow.xaml : Title for R command editor panel</comment>
  </data>
  <data name="InspectHelpText" xml:space="preserve">
    <value>Preview the dialog and sub dialogs associated with the command below." +"Clicking on the Syntax button will bring up the syntax in the Command Editor. "+ "Clicking on the HELP button will bring up the Help. Clicking on the buttons in the dialog will bring up sub-dialogs. The property grid displays the properties of the dialog.</value>
    <comment>InspectDialog.xaml : Window help text</comment>
  </data>
  <data name="InspectWinTitle" xml:space="preserve">
    <value>Inspect Dialog Window</value>
    <comment>InspectDialog.xaml : Window title text</comment>
  </data>
  <data name="MenuOutputEdit" xml:space="preserve">
    <value>Edit</value>
    <comment>OutputWindow.xaml : Edit menu in Output panel.</comment>
  </data>
  <data name="MenuOutputEditCopy" xml:space="preserve">
    <value>Copy</value>
    <comment>OutputWindow.xaml : Edit &gt;Copy in Output panel.</comment>
  </data>
  <data name="MenuOutputEditCut" xml:space="preserve">
    <value>Cut</value>
    <comment>OutputWindow.xaml : Edit &gt;Cut in Output panel.</comment>
  </data>
  <data name="MenuOutputEditPaste" xml:space="preserve">
    <value>Paste</value>
    <comment>OutputWindow.xaml : Edit &gt;Paste in Output panel.</comment>
  </data>
  <data name="MenuOutputEditRedo" xml:space="preserve">
    <value>Redo</value>
    <comment>OutputWindow.xaml : Edit &gt;Redo in Output panel.</comment>
  </data>
  <data name="MenuOutputEditUndo" xml:space="preserve">
    <value>Undo</value>
    <comment>OutputWindow.xaml : Edit &gt;Undo in Output panel.</comment>
  </data>
  <data name="MenuOutputFile" xml:space="preserve">
    <value>File</value>
    <comment>OutputWindow.xaml : File menu in Output panel. </comment>
  </data>
  <data name="MenuOutputFileClose" xml:space="preserve">
    <value>Close Window</value>
    <comment>OutputWindow.xaml : File &gt;Close in Output panel.</comment>
  </data>
  <data name="MenuOutputFileOpenOutput" xml:space="preserve">
    <value>Open BlueSky Saved Output</value>
    <comment>OutputWindow.xaml : File &gt;Open output in Output panel.</comment>
  </data>
  <data name="MenuOutputFileSaveAs" xml:space="preserve">
    <value>Save As</value>
    <comment>OutputWindow.xaml : File &gt;Save As in Output panel.</comment>
  </data>
  <data name="MenuOutputFileSaveAsPDF" xml:space="preserve">
    <value>Save As PDF</value>
    <comment>OutputWindow.xaml : File &gt;Save As PDF in Output panel.</comment>
  </data>
  <data name="MenuOutputImageSize" xml:space="preserve">
    <value>Image Size</value>
    <comment>OutputWindow.xaml : ImageSize menu in Output panel.</comment>
  </data>
  <data name="MenuOutputImageSizeChange" xml:space="preserve">
    <value>Change Graphic Size</value>
    <comment>OutputWindow.xaml : ImageSize &gt;Change in Output panel.</comment>
  </data>
  <data name="MenuOutputImageSizeDefault" xml:space="preserve">
    <value>Set Default Graphic Size</value>
    <comment>OutputWindow.xaml : ImageSize &gt;Default in Output panel.</comment>
  </data>
  <data name="MenuOutputLayout" xml:space="preserve">
    <value>Layout</value>
    <comment>OutputWindow.xaml : Layout menu in Output panel.</comment>
  </data>
  <data name="MenuOutputLayoutHorizontal" xml:space="preserve">
    <value>Horizontal</value>
    <comment>OutputWindow.xaml : Layout &gt;Horizontal in Output panel.</comment>
  </data>
  <data name="MenuOutputLayoutShowNavTree" xml:space="preserve">
    <value>Show Navigation Tree</value>
    <comment>OutputWindow.xaml : Layout &gt; Show navigation tree on left in Output panel.</comment>
  </data>
  <data name="MenuOutputLayoutVertical" xml:space="preserve">
    <value>Vertical</value>
    <comment>OutputWindow.xaml : Layout &gt;Vertical in Output panel.</comment>
  </data>
  <data name="MenuSynEdit" xml:space="preserve">
    <value>_Edit</value>
    <comment>OutputWindow.xaml : Edit menu in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditCopy" xml:space="preserve">
    <value>_Copy</value>
    <comment>OutputWindow.xaml : Edit &gt; Copy in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditCut" xml:space="preserve">
    <value>Cu_t</value>
    <comment>OutputWindow.xaml : Edit &gt; Cut in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditFindReplace" xml:space="preserve">
    <value>Find/Replace</value>
    <comment>OutputWindow.xaml : Edit &gt; Find/Replace in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditPaste" xml:space="preserve">
    <value>_Paste</value>
    <comment>OutputWindow.xaml : Edit &gt; Paste in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditRedo" xml:space="preserve">
    <value>_Redo</value>
    <comment>OutputWindow.xaml : Edit &gt; Redo in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynEditUndo" xml:space="preserve">
    <value>_Undo</value>
    <comment>OutputWindow.xaml : Edit &gt; Undo in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFile" xml:space="preserve">
    <value>_File</value>
    <comment>OutputWindow.xaml : File menu in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFileNew" xml:space="preserve">
    <value>_New</value>
    <comment>OutputWindow.xaml : File &gt; New in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFileOpen" xml:space="preserve">
    <value>_Open</value>
    <comment>OutputWindow.xaml : File &gt; Open in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFileRecent" xml:space="preserve">
    <value>Recent</value>
    <comment>OutputWindow.xaml : File &gt; Recent in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFileSave" xml:space="preserve">
    <value>_Save</value>
    <comment>OutputWindow.xaml : File &gt; Save in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="MenuSynFileSaveAs" xml:space="preserve">
    <value>Save _As</value>
    <comment>OutputWindow.xaml : File &gt; SaveAs in Syntax editor panel. Underscore for Alt shortcut</comment>
  </data>
  <data name="OutputPanelTitle" xml:space="preserve">
    <value>Results of Analysis</value>
    <comment>OutputWindow.xaml : Title for output panel</comment>
  </data>
  <data name="syncomment" xml:space="preserve">
    <value># Syntax generated by dialog</value>
    <comment>InspectDialog.xaml : comment text</comment>
  </data>
  <data name="syncomment2" xml:space="preserve">
    <value>#There is no syntax associated with dialog</value>
    <comment>InspectDialog.xaml : comment text2</comment>
  </data>
  <data name="NavTreeCheckboxTooltip" xml:space="preserve">
    <value>Select/Unselect this node to show/hide in right pane</value>
    <comment>OutputWindow.xaml.cs : Tooltip for navigation tree checkbox</comment>
  </data>
  <data name="NavTreeNodeTBTooltip" xml:space="preserve">
    <value>Click to bring the item in the view</value>
    <comment>OutputWindow.xaml.cs : Tooltip for navigation tree text</comment>
  </data>
  <data name="OutputWinSavePromptPart1" xml:space="preserve">
    <value>Do you want to save the output of the analysis?</value>
    <comment>OutputWindow.xaml.cs : Save prompt message, part 1</comment>
  </data>
  <data name="OutputWinSavePromptPart2" xml:space="preserve">
    <value>Yes : Save all and Close</value>
    <comment>OutputWindow.xaml.cs : Save prompt message, part 2</comment>
  </data>
  <data name="OutputWinSavePromptPart3" xml:space="preserve">
    <value>No : Close without saving.</value>
    <comment>OutputWindow.xaml.cs : Save prompt message, part 3</comment>
  </data>
  <data name="OutputWinSavePromptTitle" xml:space="preserve">
    <value>Save Output?</value>
    <comment>OutputWindow.xaml.cs : Save prompt messagebox title</comment>
  </data>
  <data name="REditorCloseSaveScriptPrompt" xml:space="preserve">
    <value>Do you want to save the R syntax?</value>
    <comment>OutputWindow.xaml.cs : Save R script prompt when closing the output &amp; Syntax window.</comment>
  </data>
  <data name="REditorFileTypeSupportedMsg" xml:space="preserve">
    <value>Only .r (R script) and .txt(plain text) files are supported.</value>
    <comment>OutputWindow.xaml.cs : Message about file type supported by Rcommand editor.</comment>
  </data>
  <data name="REditorFindNextEndsMsg" xml:space="preserve">
    <value>End of text: No more occurrences. Search pointer will start from the begining.</value>
    <comment>OutputWindow.xaml.cs : Message for end of text when running find-next in R Command Editor</comment>
  </data>
  <data name="REditorFindNextEndsMsgbxTitle" xml:space="preserve">
    <value>No more match</value>
    <comment>OutputWindow.xaml.cs : MessageBox title for end of text reached in R Command Editor</comment>
  </data>
  <data name="REditorReplaceAllInSelectedMsg" xml:space="preserve">
    <value>Please select some text in R Command Editor first</value>
    <comment>OutputWindow.xaml.cs : Msg for replace-all in selected option</comment>
  </data>
  <data name="REditorReplaceAllInSelectedMsgboxTitle" xml:space="preserve">
    <value>Nothing Selected</value>
    <comment>OutputWindow.xaml.cs : MsgBx title for replace-all in selected option</comment>
  </data>
  <data name="REditorSavePromptMsgBoxTitle" xml:space="preserve">
    <value>Save &amp; Close current command script?</value>
    <comment>OutputWindow.xaml.cs : Command editor script save prompt message box title</comment>
  </data>
  <data name="REditorSaveScriptPrompt" xml:space="preserve">
    <value>Do you want to save current script?</value>
    <comment>OutputWindow.xaml.cs : Command editor script save prompt</comment>
  </data>
  <data name="RScriptFilenameFilter" xml:space="preserve">
    <value>BSky R scripts,</value>
    <comment>OutputWindow.xaml.cs : Filename filter prefix message</comment>
  </data>
  <data name="SynGetStrtMsg1" xml:space="preserve">
    <value>### This is R syntax editor ###</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line1) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynGetStrtMsg2" xml:space="preserve">
    <value>### You can enter some R statements here and execute them.</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line2) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynGetStrtMsg3" xml:space="preserve">
    <value>### Type in few R statements.</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line3) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynGetStrtMsg4" xml:space="preserve">
    <value>### Select one or more, complete R statements.</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line4) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynGetStrtMsg5" xml:space="preserve">
    <value>### Click Run (blue triangle icon) from the toolbar above.</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line5) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynGetStrtMsg6" xml:space="preserve">
    <value>### See the generated output on the output panel(on the left).</value>
    <comment>OutputWindow.xaml.cs : Getting started message(line6) show in syntax panel when the gettingstarted file is missing.</comment>
  </data>
  <data name="SynRecentXmlNotFound" xml:space="preserve">
    <value>SyntaxRecent.xml not found.</value>
    <comment>OutputWindow.xaml.cs : Message about SyntaxRexcent.xml file missing</comment>
  </data>
  <data name="RecentXMLnotfound" xml:space="preserve">
    <value>Recent.xml not found...</value>
    <comment>Window1.xaml.cs : Message when recent.xml file not foud when populating File-&gt;Recent menu in main window.</comment>
  </data>
  <data name="FileRecentRScriptNotFound" xml:space="preserve">
    <value>does not exist!</value>
    <comment>OutputWindow.xaml.cs : Message when a file is clicked from file&gt;recent (Command Editor)which does not exists anymore</comment>
  </data>
  <data name="HideNavTreeText" xml:space="preserve">
    <value>Hide Navigation Tree</value>
    <comment>OutputWindow.xaml.cs : Text for hiding navigation tree</comment>
  </data>
  <data name="HistoryMenuName" xml:space="preserve">
    <value>History</value>
    <comment>CommandHistoryMenuHandler.cs : Name(Header) for the history menu</comment>
  </data>
  <data name="MenuGenerationFailedMsg" xml:space="preserve">
    <value>Menus can't be generated...</value>
    <comment>Window1.xaml.cs : Error message if for some reason there is some issue generating the menus</comment>
  </data>
  <data name="OutputWindowMainTitle" xml:space="preserve">
    <value>Output and Syntax Window-</value>
    <comment>OutputWindowContainer.cs : Output Window title text</comment>
  </data>
  <data name="OutputWindowTitleStatus" xml:space="preserve">
    <value>(Active)</value>
    <comment>OutputWindowContainer.cs : Output Window title text postfix if window is active window or not</comment>
  </data>
  <data name="RecentScriptNotFoundMsgBoxTitle" xml:space="preserve">
    <value>File not found!</value>
    <comment>OutputWindows.xaml.cs : Title for message box. File &gt; Recent in Rcommand Editor) file not found case.</comment>
  </data>
  <data name="ShowNavTreeText" xml:space="preserve">
    <value>Show Navigation Tree</value>
    <comment>OutputWindow.xaml.cs : Text for showing navigation tree</comment>
  </data>
  <data name="AppExitConfirmMsg" xml:space="preserve">
    <value>To save output and/or syntax before exiting click YES.</value>
    <comment>Window1.xaml : App exit confirmation message</comment>
  </data>
  <data name="AppExitConfirmMsgTitle" xml:space="preserve">
    <value>Exit Application</value>
    <comment>Window1.xaml : App exit confirmation messagebox title</comment>
  </data>
  <data name="AppExitOnErrorMsg" xml:space="preserve">
    <value>Error Occured. App will Exit.</value>
    <comment>Window1.xaml : App exit message when error occurred</comment>
  </data>
  <data name="AppExitOnErrorMsgTitle" xml:space="preserve">
    <value>Exiting Application!</value>
    <comment>Window1.xaml : App exit messagebox title when error occurred</comment>
  </data>
  <data name="ScoringSectionTitle" xml:space="preserve">
    <value>Score Current Dataset</value>
    <comment>Window1.xaml : Title for top right scoring section.</comment>
  </data>
  <data name="StatusbarLicInfo" xml:space="preserve">
    <value>(For details, go to Help -&gt; Licensing).</value>
    <comment>Window1.xaml : Main window status bar license info</comment>
  </data>
  <data name="buttonCancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>SelectTableWindow.xaml : Cancel button text</comment>
  </data>
  <data name="SelTableOrSheet" xml:space="preserve">
    <value>Select One Table/Sheet</value>
    <comment>SelectTableWindow.xaml : For selecting excel worksheet from the list</comment>
  </data>
  <data name="SelWorksheetWin" xml:space="preserve">
    <value>Select Worksheet Window</value>
    <comment>SelectTableWindow.xaml : For selecting excel worksheet from the list</comment>
  </data>
  <data name="AskPkgNameExample1" xml:space="preserve">
    <value>Example 1: foreign</value>
    <comment>AskPackageNameWindoe.xaml : Example one</comment>
  </data>
  <data name="AskPkgNameExample2" xml:space="preserve">
    <value>Example 2: foreign, car, MASS</value>
    <comment>AskPackageNameWindoe.xaml : Example two</comment>
  </data>
  <data name="EnterPkgNamesLine1" xml:space="preserve">
    <value>Please enter the name(s) of one or more package(s)</value>
    <comment>AskPackageNameWindoe.xaml : Asking for package names to install from CRAN. Msg line1</comment>
  </data>
  <data name="EnterPkgNamesLine2" xml:space="preserve">
    <value>separated by comma.(package names are case sensitive)</value>
    <comment>AskPackageNameWindoe.xaml : Asking for package names to install from CRAN. Msg line2</comment>
  </data>
  <data name="AddModelClassWinTitle" xml:space="preserve">
    <value>Add Model Class Window</value>
    <comment>AddModelClassWindow.xaml : Title</comment>
  </data>
  <data name="buttonAdd" xml:space="preserve">
    <value>Add</value>
    <comment>CustomSettingsWindow.xaml : button label for add item to list</comment>
  </data>
  <data name="buttonAddClass" xml:space="preserve">
    <value>Add Class</value>
    <comment>AddModelClassWindow.xaml : Add model class button text</comment>
  </data>
  <data name="buttonApply" xml:space="preserve">
    <value>Apply</value>
    <comment>CustomSettingsWindow.xaml : button text for Apply button in settings</comment>
  </data>
  <data name="buttonBrowse" xml:space="preserve">
    <value>Browse</value>
    <comment>InstallRequiredPackagesFromZip.xaml : Browse button text</comment>
  </data>
  <data name="buttonClose" xml:space="preserve">
    <value>Close</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window close button text</comment>
  </data>
  <data name="buttonDefault" xml:space="preserve">
    <value>Reset Defaults</value>
    <comment>CustomSettingsWindow.xaml : button text for Default button in settings</comment>
  </data>
  <data name="buttonFindNext" xml:space="preserve">
    <value>Find Next</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window find next button text</comment>
  </data>
  <data name="buttonMoveDown" xml:space="preserve">
    <value>Move Down</value>
    <comment>CustomSettingsWindow.xaml : button label for move down</comment>
  </data>
  <data name="buttonMoveUp" xml:space="preserve">
    <value>Move Up</value>
    <comment>CustomSettingsWindow.xaml : button label for move up</comment>
  </data>
  <data name="buttonRemove" xml:space="preserve">
    <value>Remove</value>
    <comment>CustomSettingsWindow.xaml : button label for remove item from list</comment>
  </data>
  <data name="buttonReplace" xml:space="preserve">
    <value>Replace</value>
    <comment>FindReplaceWindow.xaml : text for replace button</comment>
  </data>
  <data name="buttonReplaceAll" xml:space="preserve">
    <value>Replace All</value>
    <comment>FindReplaceWindow.xaml : text for replace-all button</comment>
  </data>
  <data name="buttonReset" xml:space="preserve">
    <value>Reset</value>
    <comment>CustomSettingsWindow.xaml : button label for reset to default</comment>
  </data>
  <data name="CantAddFactorToScaleVar" xml:space="preserve">
    <value>Cannot add factors to Measure=Scale(Numeric) type.</value>
    <comment>DataPanel.xaml : text for warning msg about adding factors levels to scale</comment>
  </data>
  <data name="ChangeImgSizDlgTitle" xml:space="preserve">
    <value>Change Image Size Dialog</value>
    <comment>ChangeImageSizeDialog.xaml : Title</comment>
  </data>
  <data name="ConfigWindowTitle" xml:space="preserve">
    <value>Options Window</value>
    <comment>CustomSettingsWindow.xaml : Title</comment>
  </data>
  <data name="confirmation" xml:space="preserve">
    <value>Confirmation</value>
    <comment>DataPanel.xaml : confirmation title for deleteing variable</comment>
  </data>
  <data name="DeleteVarConfirmation" xml:space="preserve">
    <value>Do you want to delete variable?</value>
    <comment>DataPanel.xaml : confirmation text for deleteing variable</comment>
  </data>
  <data name="DupColMsg" xml:space="preserve">
    <value>Another column with same name exists. Please try another name.</value>
    <comment>DataPanel.xaml : text for duplicate column name found</comment>
  </data>
  <data name="DupColNameTitle" xml:space="preserve">
    <value>Duplicate Column Name</value>
    <comment>DataPanel.xaml : title for duplicate column name </comment>
  </data>
  <data name="EnterImgSizePrompt" xml:space="preserve">
    <value>Enter graphic image dimensions (in pixels) :</value>
    <comment>ChangeImageSizeDialog.xaml : Message about entring new dimensions for image</comment>
  </data>
  <data name="EnterModelClassPrompt" xml:space="preserve">
    <value>Enter model class name (case sensitive):</value>
    <comment>AddModelClassWindow.xaml : Message for entering model class name to be added to the list.</comment>
  </data>
  <data name="ExistingLabel" xml:space="preserve">
    <value>Existing Label</value>
    <comment>DataPanel.xaml : text for existing label (for factor vars)</comment>
  </data>
  <data name="FindDatagridNarrowSearch" xml:space="preserve">
    <value>Narrow search by selecting one or more columns:</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window  narrow serach text</comment>
  </data>
  <data name="findDatagridTitle" xml:space="preserve">
    <value>Find Datagrid Window</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window title</comment>
  </data>
  <data name="FindReplaceWinTitle" xml:space="preserve">
    <value>Find Replace Window</value>
    <comment>FindReplaceWindow.xaml : Title</comment>
  </data>
  <data name="FindVarGridWinTitle" xml:space="preserve">
    <value>Find Variable Window</value>
    <comment>FindVargridWindow.xaml : Title</comment>
  </data>
  <data name="FindVarName" xml:space="preserve">
    <value>Find Variable Name:</value>
    <comment>FindVargridWindow.xaml : Label for 'find var name'</comment>
  </data>
  <data name="findwhat" xml:space="preserve">
    <value>Find What:</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window find what label</comment>
  </data>
  <data name="ImgHeight" xml:space="preserve">
    <value>Image Height:</value>
    <comment>ChangeImageSizeDialog.xaml : Image height text msg</comment>
  </data>
  <data name="ImgWidth" xml:space="preserve">
    <value>Image Width:</value>
    <comment>ChangeImageSizeDialog.xaml : Image width text msg</comment>
  </data>
  <data name="InSelTextChkBox" xml:space="preserve">
    <value>In selected text</value>
    <comment>FindReplaceWindow.xaml : text for 'in selected text' checkbox</comment>
  </data>
  <data name="InstallFromZipTitle" xml:space="preserve">
    <value>Install Packages From Folder</value>
    <comment>InstallRequiredPackagesFromZip.xaml : Title</comment>
  </data>
  <data name="InvalidDateTimeMsg" xml:space="preserve">
    <value>You entered an invalid date/time.</value>
    <comment>DataPanel.xaml : text for invalid date time entered by user</comment>
  </data>
  <data name="InvalidDateTimeTitle" xml:space="preserve">
    <value>Invalid Date/Time.</value>
    <comment>DataPanel.xaml : title for invalid date time entered by user</comment>
  </data>
  <data name="InvalidOperationOnScale" xml:space="preserve">
    <value>This operation is not valid for variable of type Measure = Scale(Numeric)</value>
    <comment>DataPanel.xaml : text for invalid operation performed on scale var</comment>
  </data>
  <data name="lbl1UserPkg" xml:space="preserve">
    <value>User's Packages (manually loaded by user from</value>
    <comment>CustomSettingsWindow.xaml : First part of the label for user R packages</comment>
  </data>
  <data name="lbl2UserPkg" xml:space="preserve">
    <value>Tools &gt; Packages &gt; Load user session package(s) )</value>
    <comment>CustomSettingsWindow.xaml : Second part of the label for user R packages</comment>
  </data>
  <data name="lblAdvancedLogging" xml:space="preserve">
    <value>Advanced Logging:</value>
    <comment>CustomSettingsWindow.xaml : label for advanced logging</comment>
  </data>
  <data name="lblCharToFactor" xml:space="preserve">
    <value>While loading CSV/Excel files, convert "character" columns to "factor".</value>
    <comment>CustomSettingsWindow.xaml : label for character to factor conversion if CSV/Excel files are loaded.</comment>
  </data>
  <data name="lblCommandTitleColor" xml:space="preserve">
    <value>Command Title Color:</value>
    <comment>CustomSettingsWindow.xaml : label for command color</comment>
  </data>
  <data name="lblDataTab" xml:space="preserve">
    <value>Data</value>
    <comment>DataPanel.xaml : Datagrid Data tab title</comment>
  </data>
  <data name="lblDefaultInstanceName" xml:space="preserve">
    <value>Default instance name for MSSQL Full is MSSQLSERVER and for MSSQL Express is SQLEXPRESS</value>
    <comment>CustomSettingsWindow.xaml : label for specifying default instance names</comment>
  </data>
  <data name="lblDefPkg" xml:space="preserve">
    <value>Default Packages (loads with application):</value>
    <comment>CustomSettingsWindow.xaml : label for default package list</comment>
  </data>
  <data name="lblDropdownModels" xml:space="preserve">
    <value>List of Model classes that will appear in the 'Model Type' dropdown.</value>
    <comment>CustomSettingsWindow.xaml : label for model classes shown in dropdown</comment>
  </data>
  <data name="lblErrorColor" xml:space="preserve">
    <value>Error Color:</value>
    <comment>CustomSettingsWindow.xaml : label for error color</comment>
  </data>
  <data name="lblExampleRHomeDir" xml:space="preserve">
    <value>Example: C:/Program Files/R/R-3.2.1 (use forward slash '/' for path)</value>
    <comment>CustomSettingsWindow.xaml : text for example of RHome Dir</comment>
  </data>
  <data name="lblFind" xml:space="preserve">
    <value>Find:</value>
    <comment>FindReplaceWindow.xaml : label for Find</comment>
  </data>
  <data name="lblImageHeight" xml:space="preserve">
    <value>Output Image Height:</value>
    <comment>CustomSettingsWindow.xaml : label for image height</comment>
  </data>
  <data name="lblImageWidth" xml:space="preserve">
    <value>Output Image Width:</value>
    <comment>CustomSettingsWindow.xaml : label for image width</comment>
  </data>
  <data name="lblInitialDirectory" xml:space="preserve">
    <value>Initial Directory:</value>
    <comment>CustomSettingsWindow.xaml : label for initial directory</comment>
  </data>
  <data name="lblInstanceName" xml:space="preserve">
    <value>Enter server instance name :</value>
    <comment>CustomSettingsWindow.xaml : label for instance name prompt</comment>
  </data>
  <data name="lblInstanceNameNote" xml:space="preserve">
    <value>Please modify the server instance name if its different from the default.</value>
    <comment>CustomSettingsWindow.xaml : label for a note about instance name</comment>
  </data>
  <data name="lblLicNotifyDays" xml:space="preserve">
    <value>Enter comma separated list of days (how many days before expiry, reminder should notify you. Blank field loads defaults. Enter 0 or 1 if you dont want to set any days):</value>
    <comment>CustomSettingsWindow.xaml : lable for notify days before license expires</comment>
  </data>
  <data name="lblLoadMissing" xml:space="preserve">
    <value>Load SAV file's missing values:</value>
    <comment>CustomSettingsWindow.xaml : label for loading missing values when SAV file is opened</comment>
  </data>
  <data name="lblLogLevel" xml:space="preserve">
    <value>Log Level:</value>
    <comment>CustomSettingsWindow.xaml : lable for log level</comment>
  </data>
  <data name="lblMatchCaseChkBox" xml:space="preserve">
    <value>Match Case</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window text for Match Case checkbox</comment>
  </data>
  <data name="lblMatchOptions" xml:space="preserve">
    <value>Options:</value>
    <comment>FindReplaceWindow.xaml : label for Find/Replace Options</comment>
  </data>
  <data name="lblMaxCharsNavTree" xml:space="preserve">
    <value>Max. number of characters(text length) shown in the left navigation tree:</value>
    <comment>CustomSettingsWindow.xaml : label for max chars in nav tree</comment>
  </data>
  <data name="lblMaxFactor" xml:space="preserve">
    <value>Enter maximum number of factor you want:</value>
    <comment>CustomSettingsWindow.xaml : label for max number of factor allowed</comment>
  </data>
  <data name="lblMouseHoverBoxColor" xml:space="preserve">
    <value>Mouse hover box color (in output pane):</value>
    <comment>CustomSettingsWindow.xaml : label for mouse hover box color</comment>
  </data>
  <data name="lblNavTreeSelColor" xml:space="preserve">
    <value>Navigation tree selected item box color (in output pane):</value>
    <comment>CustomSettingsWindow.xaml : label for navigation tree selected item color</comment>
  </data>
  <data name="lblNoDecimalDigits" xml:space="preserve">
    <value>Number of decimal digits to display.</value>
    <comment>CustomSettingsWindow.xaml : label for number of decimals option</comment>
  </data>
  <data name="lblOpenOptions" xml:space="preserve">
    <value>Show Options window when opening dataset:</value>
    <comment>CustomSettingsWindow.xaml : label for showing options while opening dataset</comment>
  </data>
  <data name="lblPageSize" xml:space="preserve">
    <value>Page Size:</value>
    <comment>CustomSettingsWindow.xaml : label for PDFpage size</comment>
  </data>
  <data name="lblPDFFontSize" xml:space="preserve">
    <value>Font Size:</value>
    <comment>CustomSettingsWindow.xaml : label for PDF font size</comment>
  </data>
  <data name="lblPDFMargins" xml:space="preserve">
    <value>Enter comma separated margin values (Left, Top, Right, Bottom):</value>
    <comment>CustomSettingsWindow.xaml : label for margins for PDF</comment>
  </data>
  <data name="lblPDFMaxCols" xml:space="preserve">
    <value>Enter maximum number of table columns per page(including row header columns):</value>
    <comment>CustomSettingsWindow.xaml : label for max cols in a PDF page</comment>
  </data>
  <data name="lblPDFMaxRows" xml:space="preserve">
    <value>Enter maximum number of table rows per page(including column header rows):</value>
    <comment>CustomSettingsWindow.xaml : label for max rows in a PDF page</comment>
  </data>
  <data name="lblReplaceWith" xml:space="preserve">
    <value>Replace With:</value>
    <comment>FindReplaceWindow.xaml : label for Replace With</comment>
  </data>
  <data name="lblRetainSciNotation" xml:space="preserve">
    <value>Use scientific notation for a very small and a very large number (eg.0.00001234, 1.234e-5, -0.00001234, -1.234e-5).</value>
    <comment>CustomSettingsWindow.xaml : label for retain sci notation option</comment>
  </data>
  <data name="lblRHomeDir" xml:space="preserve">
    <value>R Home Directory:</value>
    <comment>CustomSettingsWindow.xaml : label for R Home directory</comment>
  </data>
  <data name="lblRSynColor" xml:space="preserve">
    <value>R Syntax Color:</value>
    <comment>CustomSettingsWindow.xaml : label for R syntax color</comment>
  </data>
  <data name="lblShowHideNumericHeaders" xml:space="preserve">
    <value>The R object that contains the results of the analytical function may contain numeric row headers. This option determines whether the row headers are displayed or hidden. When checked, numeric row headers are shown in output grid:</value>
    <comment>CustomSettingsWindow.xaml : label for display/hide numeric headers in output tables.</comment>
  </data>
  <data name="lblTempFolder" xml:space="preserve">
    <value>Temp Folder:</value>
    <comment>CustomSettingsWindow.xaml : label for temporary folder</comment>
  </data>
  <data name="lblThresholdCount" xml:space="preserve">
    <value>Threshold number of values per output table for which warning will be displayed informing the user that table generation will be time consuming and giving the user the choice to display the partial results.</value>
    <comment>CustomSettingsWindow.xaml : label for threshold number of cells in output table</comment>
  </data>
  <data name="lblTitleDriverPath" xml:space="preserve">
    <value>Micosoft SQL server Driver path:</value>
    <comment>CustomSettingsWindow.xaml : Main title for driver path</comment>
  </data>
  <data name="lblTitleDriverPathExample" xml:space="preserve">
    <value>Example: C:/Program Files/Microsoft SQL Server JDBC Driver 3.0/sqljdbc_3.0/enu/sqljdbc4.jar</value>
    <comment>CustomSettingsWindow.xaml : label giving example of driver path</comment>
  </data>
  <data name="lblTitleDriverPathNote" xml:space="preserve">
    <value>NOTE: You must use forward slash(/) in path.</value>
    <comment>CustomSettingsWindow.xaml : label for important note while entering driver path</comment>
  </data>
  <data name="lblTitleServerInstance" xml:space="preserve">
    <value>MSSQL Server Instance:</value>
    <comment>CustomSettingsWindow.xaml : Main title for server instance </comment>
  </data>
  <data name="lblVarGridContext" xml:space="preserve">
    <value>Right click on the row to access functions, for eg. Add Factor Level, Change Label, Make Factor, Insert New Variable and Delete Variable</value>
    <comment>DataPanel.xaml : Vargrid context menu related message</comment>
  </data>
  <data name="lblVariablesTab" xml:space="preserve">
    <value>Variables</value>
    <comment>DataPanel.xaml : Vargrid Variable tab title</comment>
  </data>
  <data name="lblWholeWordChkBox" xml:space="preserve">
    <value>Whole Word</value>
    <comment>FindDatagridWindow.xaml : Find datagrid window text for Whole Word checkbox</comment>
  </data>
  <data name="LocateZipMsg" xml:space="preserve">
    <value>Click 'Browse' and locate your folder that contains R package zip files.</value>
    <comment>InstallRequiredPackagesFromZip.xaml : Message to locate the zip R package</comment>
  </data>
  <data name="MatchEndReached" xml:space="preserve">
    <value>Reached end. No more matches.</value>
    <comment>DataPanel.xaml : text for end is reached and there is no match</comment>
  </data>
  <data name="ModelClassExample" xml:space="preserve">
    <value>Example: type lm without quotes and click 'Add Class'</value>
    <comment>AddModelClassWindow.xaml : Example text for adding model class</comment>
  </data>
  <data name="NewLabel" xml:space="preserve">
    <value>New Label</value>
    <comment>DataPanel.xaml : text for new label (for factor vars)</comment>
  </data>
  <data name="NoMatch" xml:space="preserve">
    <value>No Match</value>
    <comment>DataPanel.xaml : text for no match</comment>
  </data>
  <data name="NoMatchFound" xml:space="preserve">
    <value>No match found</value>
    <comment>DataPanel.xaml : text for no match</comment>
  </data>
  <data name="NoMoreMatch" xml:space="preserve">
    <value>No more matches</value>
    <comment>DataPanel.xaml : text for no more match</comment>
  </data>
  <data name="NonNumForNumVar" xml:space="preserve">
    <value>Invalid value, you have entered a non-numeric value for a numeric variable. If you want to enter a non-numeric values make this variable a factor and enter non-numeric levels</value>
    <comment>DataPanel.xaml : Non numeric valud entered for numeric var</comment>
  </data>
  <data name="NoteMsg" xml:space="preserve">
    <value>NOTE: All the files in the folder must be R package .zip files.</value>
    <comment>InstallRequiredPackagesFromZip.xaml : Important note</comment>
  </data>
  <data name="SelOneOrMore" xml:space="preserve">
    <value>Select one or more packages:</value>
    <comment>SelectPackageWindow.xaml : Label message to select one or more R packages</comment>
  </data>
  <data name="SelOneOrMoreTip" xml:space="preserve">
    <value>( Tip: Use Ctrl or Shift key for multi-select.)</value>
    <comment>SelectPackageWindow.xaml : Tip for how to multi-select</comment>
  </data>
  <data name="SelPkgWinTitle" xml:space="preserve">
    <value>Select Packages Window</value>
    <comment>SelectPackageWindow.xaml : Title</comment>
  </data>
  <data name="StatusbarSplitInfo" xml:space="preserve">
    <value>Split on :</value>
    <comment>DataPanel.xaml : text for split info on the status bar of main window</comment>
  </data>
  <data name="TabTitleAdvanced" xml:space="preserve">
    <value>Advanced</value>
    <comment>CustomSettingsWindow.xaml : Title for Advanced tab in settings</comment>
  </data>
  <data name="TabTitleOutput" xml:space="preserve">
    <value>Output</value>
    <comment>CustomSettingsWindow.xaml : Title  for Colors tab in settings</comment>
  </data>
  <data name="TabTitleDefaultPackages" xml:space="preserve">
    <value>Default Packages</value>
    <comment>CustomSettingsWindow.xaml : Title for Default Packages tab in settings</comment>
  </data>
  <data name="TabTitleImage" xml:space="preserve">
    <value>Image</value>
    <comment>CustomSettingsWindow.xaml : Title for Image tab in settings</comment>
  </data>
  <data name="TabTitleModels" xml:space="preserve">
    <value>Models</value>
    <comment>CustomSettingsWindow.xaml : Title for Models tab in settings</comment>
  </data>
  <data name="TabTitleOthers" xml:space="preserve">
    <value>Others</value>
    <comment>CustomSettingsWindow.xaml : Title for Others tab in settings</comment>
  </data>
  <data name="TabTitlePathSettings" xml:space="preserve">
    <value>Path Settings</value>
    <comment>CustomSettingsWindow.xaml : Title  for Path Settings tab in settings</comment>
  </data>
  <data name="TabTitlePDFSettings" xml:space="preserve">
    <value>PDF Settings</value>
    <comment>CustomSettingsWindow.xaml : Title for PDF Settings tab in settings</comment>
  </data>
  <data name="TabTitleSQLSettings" xml:space="preserve">
    <value>SQL Settings</value>
    <comment>CustomSettingsWindow.xaml : Title for SQLSettings tab in settings</comment>
  </data>
  <data name="TabTitleUserPackages" xml:space="preserve">
    <value>User Packages</value>
    <comment>CustomSettingsWindow.xaml : Title for User Packages tab in settings</comment>
  </data>
  <data name="ToolTipCloseDataset" xml:space="preserve">
    <value>Close this dataset</value>
    <comment>DataPanel.xaml : text for tool tip for closing current dataset when mouse is over cross in current dataset tab</comment>
  </data>
  <data name="ToolTipSorted" xml:space="preserve">
    <value>Sorted</value>
    <comment>DataPanel.xaml : text for tool tip for sorted col</comment>
  </data>
  <data name="WarningAddRemoveLabel" xml:space="preserve">
    <value>Add/Remove Level Warning:</value>
    <comment>DataPanel.xaml : text for title of warning message about adding levels to scale</comment>
  </data>
  <data name="WarningChangeLevel" xml:space="preserve">
    <value>Change Level Warning:</value>
    <comment>DataPanel.xaml : text for title for changing level</comment>
  </data>
  <data name="buttonConnect" xml:space="preserve">
    <value>Connect</value>
    <comment>DataSourceSelectorWindow.xaml : connect button text</comment>
  </data>
  <data name="DataSrcSelectorWinTitle" xml:space="preserve">
    <value>Data Source Selector Window</value>
    <comment>DataSourceSelectorWindow.xaml : Title</comment>
  </data>
  <data name="lblSQLConnectionParams" xml:space="preserve">
    <value>Specify Connection Parameters:</value>
    <comment>DataSourceSelectorWindow.xaml : label for connection parameters groupbox</comment>
  </data>
  <data name="lblSQLDatabaseName" xml:space="preserve">
    <value>Database Name:</value>
    <comment>DataSourceSelectorWindow.xaml : label for SQL database name</comment>
  </data>
  <data name="lblSQLHostServer" xml:space="preserve">
    <value>Host / Server:</value>
    <comment>DataSourceSelectorWindow.xaml : label for SQL host/server</comment>
  </data>
  <data name="lblSQLPassword" xml:space="preserve">
    <value>Password:</value>
    <comment>DataSourceSelectorWindow.xaml : label for SQL password</comment>
  </data>
  <data name="lblSQLSelDataSrc" xml:space="preserve">
    <value>Select Data Source:</value>
    <comment>DataSourceSelectorWindow.xaml : label for select data source</comment>
  </data>
  <data name="lblSQLUserID" xml:space="preserve">
    <value>User ID:</value>
    <comment>DataSourceSelectorWindow.xaml : label for SQL userid</comment>
  </data>
  <data name="PlzWaitSQL" xml:space="preserve">
    <value>Connection in progress. Please wait....</value>
    <comment>BSkyWaitProgressBar.xaml.cs : Please wait message while connecting to SQL server</comment>
  </data>
  <data name="String5" xml:space="preserve">
    <value />
    <comment>DataSourceSelectorWindow.xaml : Title</comment>
  </data>
  <data name="buttonBack" xml:space="preserve">
    <value>Back</value>
    <comment>TableColumnSelectorWindow.xaml : back button text</comment>
  </data>
  <data name="buttonConnectFServer" xml:space="preserve">
    <value>Connect to Server</value>
    <comment>BSkyFloatingLicUI.xaml : text for connect button for floating license server </comment>
  </data>
  <data name="chkboxTables" xml:space="preserve">
    <value>Tables</value>
    <comment>TableColumnSelectorWindow.xaml : label for tables checkbox</comment>
  </data>
  <data name="chkboxViews" xml:space="preserve">
    <value>Views</value>
    <comment>TableColumnSelectorWindow.xaml : label for views checkbox</comment>
  </data>
  <data name="FLicGrpBox1Title" xml:space="preserve">
    <value>Floating License Server Details:</value>
    <comment>BSkyFloatingLicUI.xaml : First GroupBox title</comment>
  </data>
  <data name="FLicGrpBox2Title" xml:space="preserve">
    <value>License Information:</value>
    <comment>BSkyFloatingLicUI.xaml : Second GroupBox title</comment>
  </data>
  <data name="FLicGrpBox3Title" xml:space="preserve">
    <value>Licensed To:</value>
    <comment>BSkyFloatingLicUI.xaml : Third GroupBox title</comment>
  </data>
  <data name="lblColumns" xml:space="preserve">
    <value>Columns:</value>
    <comment>TableColumnSelectorWindow.xaml : label just above listbox on right</comment>
  </data>
  <data name="lblFLicEnterServerIP" xml:space="preserve">
    <value>Enter Floating License Server's IP adress and port number(e.g. 127.0.0.1:16090):</value>
    <comment>BSkyFloatingLicUI.xaml : Floating license- enter ip address message</comment>
  </data>
  <data name="lblFLicEnterServerIPTip" xml:space="preserve">
    <value>Type in IP address and port number of the floating license server if you are using this application for the first time. If the license server in your organization has been moved/modified then enter new ip address and port number in the above field. Finally, click 'Connect to Server' button after entering IP address and port number.</value>
    <comment>BSkyFloatingLicUI.xaml : F.Lic tip below the ip addredd textbox</comment>
  </data>
  <data name="lblFLicExpiryDate" xml:space="preserve">
    <value>License Expiration Date:</value>
    <comment>BSkyFloatingLicUI.xaml : label for floating license expiry date</comment>
  </data>
  <data name="lblFLicOwnerCompany" xml:space="preserve">
    <value>Company:</value>
    <comment>BSkyFloatingLicUI.xaml : label for floating license owner company</comment>
  </data>
  <data name="lblFLicOwnerEmail" xml:space="preserve">
    <value>Email:</value>
    <comment>BSkyFloatingLicUI.xaml : label for floating license owner email</comment>
  </data>
  <data name="lblFLicOwnerName" xml:space="preserve">
    <value>Name:</value>
    <comment>BSkyFloatingLicUI.xaml : label for floating license owner name</comment>
  </data>
  <data name="lblFLicServerConnectingPlzWait" xml:space="preserve">
    <value>Connecting to license server for validating license. Please wait...</value>
    <comment>BSkyFloatingLicUI.xaml : While connecting to Floating Lic server this msg is shown in the status bar of floating lic window.</comment>
  </data>
  <data name="lblFLicStatus" xml:space="preserve">
    <value>License Status:</value>
    <comment>BSkyFloatingLicUI.xaml : label for floating license status</comment>
  </data>
  <data name="lblSelDatabase" xml:space="preserve">
    <value>Select a database:</value>
    <comment>TableColumnSelectorWindow.xaml : label for select database</comment>
  </data>
  <data name="lblSelTableView" xml:space="preserve">
    <value>Check Tables/Views to see the list of Tables/Views. Click on the table/view name to see its columns on the right pane</value>
    <comment>TableColumnSelectorWindow.xaml : label for informing user about cheking views or tables option</comment>
  </data>
  <data name="lblShowsCols" xml:space="preserve">
    <value>Displays the columns of the selected table.</value>
    <comment>TableColumnSelectorWindow.xaml : label for header on top of colum listbox</comment>
  </data>
  <data name="lblSQLExample1" xml:space="preserve">
    <value>1. MS-SQL Example:         SELECT * FROM Owner.TABLE-NAME</value>
    <comment>TableColumnSelectorWindow.xaml : label for SQLexample 1</comment>
  </data>
  <data name="lblSQLExample2" xml:space="preserve">
    <value>2. MySQL / Postgres / MS-ACCESS Example:       SELECT * FROM TABLE-NAME</value>
    <comment>TableColumnSelectorWindow.xaml : label for SQL example 2</comment>
  </data>
  <data name="lblSQLtip" xml:space="preserve">
    <value>Write your 'SELECT' query in the textbox below. You can enter complex queries, sub-queries, joins as supported by your SQL server.</value>
    <comment>TableColumnSelectorWindow.xaml : label for wiriting SQLquerry tip</comment>
  </data>
  <data name="lblTableView" xml:space="preserve">
    <value>Tables/Views:</value>
    <comment>TableColumnSelectorWindow.xaml : label for tables/views</comment>
  </data>
  <data name="menuCloseWindow" xml:space="preserve">
    <value>Close Window</value>
    <comment>OutpuViewerWindow.xaml : Close window menu option text</comment>
  </data>
  <data name="menuOpen" xml:space="preserve">
    <value>Open</value>
    <comment>OutpuViewerWindow.xaml : Open output menu option text</comment>
  </data>
  <data name="OutputViewerOptionsMenu" xml:space="preserve">
    <value>Options</value>
    <comment>OutpuViewerWindow.xaml : Options menu text</comment>
  </data>
  <data name="OutputViewerTitle" xml:space="preserve">
    <value>BlueSky Output Viewer</value>
    <comment>OutpuViewerWindow.xaml : Title</comment>
  </data>
  <data name="SQLSelTableWinTitle" xml:space="preserve">
    <value>Table and Column(s) Selector Window</value>
    <comment>TableColumnSelectorWindow.xaml : Title</comment>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add Category</value>
    <comment>AddCategoryDialog.xaml : title</comment>
  </data>
  <data name="AddCategoryErrMsg1" xml:space="preserve">
    <value>Please provide category name and click OK.</value>
    <comment>AddCategoryDialog.xaml.cs : Error message one</comment>
  </data>
  <data name="AddCategoryErrMsg2" xml:space="preserve">
    <value>Error: Please provide category name or click Cancel to exit.</value>
    <comment>AddCategoryDialog.xaml.cs : Error message two</comment>
  </data>
  <data name="buttonDisplayAllOutput" xml:space="preserve">
    <value>Display All Output</value>
    <comment>LargeResultWarningWindow.xaml : button text</comment>
  </data>
  <data name="buttonDisplayPartialOutput" xml:space="preserve">
    <value>Display Partial Output</value>
    <comment>LargeResultWarningWindow.xaml : button text</comment>
  </data>
  <data name="LargeResultWarningMsg1" xml:space="preserve">
    <value>You have generated an output table which has exceeded the configured threshold of {0} values.</value>
    <comment>LargeResultWarningWindow.xaml.cs : msg1</comment>
  </data>
  <data name="LargeResultWarningMsg1b" xml:space="preserve">
    <value>This table will take a long time to render in the output.</value>
    <comment>LargeResultWarningWindow.xaml : msg1b</comment>
  </data>
  <data name="LargeResultWarningMsg2" xml:space="preserve">
    <value>- To display the first {0} of a total {1} rows click \"Display Partial Output\"</value>
    <comment>LargeResultWarningWindow.xaml : msg2</comment>
  </data>
  <data name="LargeResultWarningSecMsg2" xml:space="preserve">
    <value>- Click \"Display Partial Output\" to show partial results.</value>
    <comment>LargeResultWarningWindow.xaml : msg2 for another constructor</comment>
  </data>
  <data name="LargeResultWarningWindowStmt1" xml:space="preserve">
    <value>- To display the entire output click "Display All Output".</value>
    <comment>LargeResultWarningWindow.xaml : Statement1</comment>
  </data>
  <data name="LargeResultWarningWindowStmt2" xml:space="preserve">
    <value>- For very large output table you can also display text output which will be faster by printing the object directly from the BlueSky R Command Editor. Example: if BSkyFormat(tableobj) is taking too long, type in tableobj in the BlueSky R Command Editor to get text output.</value>
    <comment>LargeResultWarningWindow.xaml : Statement2</comment>
  </data>
  <data name="LargeResultWarningWindowStmt3" xml:space="preserve">
    <value>- Click "Cancel" to abort table generation.</value>
    <comment>LargeResultWarningWindow.xaml : Statement3</comment>
  </data>
  <data name="lblCategoryName" xml:space="preserve">
    <value>Category Name:</value>
    <comment>AddCategoryDialog.xaml : label msg for adding category from dialog designer</comment>
  </data>
  <data name="MenuAboveBelowDialogOption1" xml:space="preserve">
    <value>Above Target(as a Sibling)</value>
    <comment>MenuAboveBelowDialog.xaml : Option1</comment>
  </data>
  <data name="MenuAboveBelowDialogOption2" xml:space="preserve">
    <value>Below Target(as a Sibling)</value>
    <comment>MenuAboveBelowDialog.xaml : Option2</comment>
  </data>
  <data name="MenuAboveBelowDialogOption3" xml:space="preserve">
    <value>Inside Target(as a Child)</value>
    <comment>MenuAboveBelowDialog.xaml : Option3</comment>
  </data>
  <data name="MenuAboveBelowDialogPrompt" xml:space="preserve">
    <value>Where in target would you like to place your dragged item?</value>
    <comment>MenuAboveBelowDialog.xaml : Question</comment>
  </data>
  <data name="MenuAboveBelowDialogTitle" xml:space="preserve">
    <value>Dragged Item Location Dialog.</value>
    <comment>MenuAboveBelowDialog.xaml : Title</comment>
  </data>
  <data name="buttonLoadModel" xml:space="preserve">
    <value>Load Model</value>
    <comment>GetModelsControl.xaml : Load Model</comment>
  </data>
  <data name="buttonSaveModel" xml:space="preserve">
    <value>Save Model</value>
    <comment>GetModelsControl.xaml : Save Model</comment>
  </data>
  <data name="buttonScore" xml:space="preserve">
    <value>Score</value>
    <comment>GetModelsControl.xaml : Score Model</comment>
  </data>
  <data name="lblModelType" xml:space="preserve">
    <value>Model Type:</value>
    <comment>GetModelsControl.xaml : Model type</comment>
  </data>
  <data name="lblPickModel" xml:space="preserve">
    <value>Pick a Model:</value>
    <comment>GetModelsControl.xaml : Pick a Model</comment>
  </data>
  <data name="CSVTXTCommaDeciChar" xml:space="preserve">
    <value>Comma ( , )   [e.g.  1,234]</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Text for comma decimal character</comment>
  </data>
  <data name="CSVTXTCommaText" xml:space="preserve">
    <value>Commas ( , )</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for comma</comment>
  </data>
  <data name="CSVTXTDeciCharTitle" xml:space="preserve">
    <value>Specify Decimal Point Character(for numeric data) :</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Title for decimal character section</comment>
  </data>
  <data name="CSVTXTFieldSepTitle" xml:space="preserve">
    <value>Specify Field Separator:</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Title for filed separator section</comment>
  </data>
  <data name="CSVTXTFirstChkBoxLbl" xml:space="preserve">
    <value>First row of a CSV/TXT file contains column headers :</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : First checkbox lable text</comment>
  </data>
  <data name="CSVTXTotherText" xml:space="preserve">
    <value>Other</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for 'other'</comment>
  </data>
  <data name="CSVTXTPointDeciChar" xml:space="preserve">
    <value>Decimal Point ( . )   [e.g.  1.234]</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Text for dot decimal character</comment>
  </data>
  <data name="CSVTXTSecChkBoxHint" xml:space="preserve">
    <value>[For basket format for Apriori/Market Basket Analysis all items are in a single variable/column separated by a delimiter, e.g. Milk, Butter, Brown Bread, ...]</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : hint below Sec checkbox lable text</comment>
  </data>
  <data name="CSVTXTSecChkBoxLbl" xml:space="preserve">
    <value>Load all comma separated values in a single column/variable :</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Sec checkbox lable text</comment>
  </data>
  <data name="CSVTXTSemicolonText" xml:space="preserve">
    <value>Semicolons</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for semicolon</comment>
  </data>
  <data name="CSVTXTspecifyText" xml:space="preserve">
    <value>Specify:</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for 'specify'</comment>
  </data>
  <data name="CSVTXTtabtext" xml:space="preserve">
    <value>Tabs</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for tabs</comment>
  </data>
  <data name="CSVTXTwhiteSpaceText" xml:space="preserve">
    <value>White space</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : text for white space</comment>
  </data>
  <data name="CSVTXTWinTitle" xml:space="preserve">
    <value>CSV/TXT Open Options Window</value>
    <comment>OpenCSVTXTOptionsWindows.xaml : Title</comment>
  </data>
  <data name="DontShowAgain" xml:space="preserve">
    <value>Do not show this message again</value>
    <comment>RDataWarningMessageBox.xaml : Do not show checkbox message string</comment>
  </data>
  <data name="RDataWarningTitle" xml:space="preserve">
    <value>Opening RData file</value>
    <comment>RDataWarningMessageBox.xaml : Title string</comment>
  </data>
  <data name="String1" xml:space="preserve">
    <value> </value>
  </data>
  <data name="buttonSave" xml:space="preserve">
    <value>Save</value>
    <comment>CustomSettingsWindow.xaml : button text for SAVE</comment>
  </data>
  <data name="ConfSettingOverwriteDefaults" xml:space="preserve">
    <value>All your configuration settings will be overwritten by defaults. Do you want to continue?</value>
    <comment>CustomSettingsWindow.xaml.cs : Overwrite settings with defaults, confirmation message.</comment>
  </data>
  <data name="ConfSettingOverwriteDefaultsTitle" xml:space="preserve">
    <value>Overwrite with defaults?</value>
    <comment>CustomSettingsWindow.xaml.cs : Overwrite settings with defaults, confirmation messagebox title</comment>
  </data>
  <data name="ConfSettingSaveConfirmation" xml:space="preserve">
    <value>Do you want to save changes before closing the window?</value>
    <comment>CustomSettingsWindow.xaml : Confirmation text when configuration settings dialog is closed from top right cross</comment>
  </data>
  <data name="ConfSettingSaveConfirmTitle" xml:space="preserve">
    <value>Save changes?</value>
    <comment>CustomSettingsWindow.xaml.cs : Save settings confirmation messagebox title.</comment>
  </data>
  <data name="ImgDefaultDimSetMsg" xml:space="preserve">
    <value>Default image height and width set to 600 pixels each.</value>
    <comment>OutputWindow.xml.cs : Message shown when default image dimensions are set from menu in output window</comment>
  </data>
  <data name="ImgDefaultDimSetMsgTitle" xml:space="preserve">
    <value>Default image dimensions set</value>
    <comment>OutputWindow.xml.cs : Messagebox title which shown when default image dimensions are set from menu in output window</comment>
  </data>
  <data name="NumericLevels" xml:space="preserve">
    <value>Numeric levels</value>
    <comment>DataPanel.xaml.cs : Header text for numeric levels</comment>
  </data>
  <data name="ShowOutputInAPA" xml:space="preserve">
    <value>Show output tables in APA(American Psychological Association) style.</value>
    <comment>CustomSettingsWindow.xaml : To switch ON APA style for output tables.</comment>
  </data>
  <data name="ShowRDataWarningMessage" xml:space="preserve">
    <value>Show warning message box when RData file is opened.</value>
    <comment>CustomSettingsWindow.xaml : Turn ON/OFF the warning messagebox when RData file is opened. Opening RData can overwrite existing R objects.</comment>
  </data>
  <data name="AppExitConfirmMsg2" xml:space="preserve">
    <value>Click NO to exit without saving.</value>
    <comment>Window1.xaml : App exit confirmation message, line 2</comment>
  </data>
  <data name="AddFactorLevelMsg" xml:space="preserve">
    <value>Enter new level(s) separated by comma (e.g. level1, level2, level3):</value>
    <comment>DataPAnel.xaml : text for ValueLabelsSubDialog providing field for user to enter new level</comment>
  </data>
  <data name="lblExampleRHomeDir2" xml:space="preserve">
    <value>Do not change this setting. It should always point to the R that is installed under BlueSky Statistics installation folder. Example: ./R-3.6.1</value>
    <comment>RHomeConfigWindow.xaml : Example below RHome text field</comment>
  </data>
  <data name="RHomeDirLabel" xml:space="preserve">
    <value>R Home Directory:</value>
    <comment>RHomeConfigWindow.xaml : Label on the left of RHome text field</comment>
  </data>
  <data name="SetRHomeLabelTextAtLaunchFail" xml:space="preserve">
    <value>Please make corrections to the 'R Home Directory' path if incorrect and then relaunch the app. (IMPORTANT: Use forward slash as a path separator as shown in the example below).</value>
    <comment>RHomeConfigWindow.xaml : Message on top of RHome text field</comment>
  </data>
  <data name="SelDataframeToLoad" xml:space="preserve">
    <value>Select one or more R data.frame object(s) to load them in the UI data grid:</value>
    <comment>SelectRdataDataframesWindow.xaml : Select message on top</comment>
  </data>
  <data name="ShowHideSyntaxPanel" xml:space="preserve">
    <value>Show/Hide R Command Editor Panel</value>
    <comment>OutputWindow.xaml : Tooltip and/or text for show-hide button for showing and hiding syntax panel.</comment>
  </data>
  <data name="lblShowSyntaxInOutput" xml:space="preserve">
    <value>Show syntax in the Output Window</value>
    <comment>CustomSettingsWindow.xaml : lable for Show/Hide syntax in output window</comment>
  </data>
  <data name="themeicontooltip" xml:space="preserve">
    <value>Set theme</value>
    <comment>Window1.xaml and OutputWindow.xaml</comment>
  </data>
  <data name="ShowHideNavTreePanel" xml:space="preserve">
    <value>Show/hide navigation tree</value>
  </data>
  <data name="lblShowActualPvalue" xml:space="preserve">
    <value>Show actual p-values (e.g. p-value = .0002) in the output instead of "&lt;.001***".</value>
    <comment>CustomSettingsWindow.xaml : Title for show actual p.value</comment>
  </data>
  <data name="TabTitleColors" xml:space="preserve">
    <value>Colors</value>
    <comment>CustomSettingsWindow.xaml : Title for Colors tab in settings</comment>
  </data>
  <data name="lblExampleUserRLib" xml:space="preserve">
    <value>User R packages will install in this location</value>
    <comment>CustomSettingsWindow.xaml : Hint for User R library location</comment>
  </data>
  <data name="lblUserRLib" xml:space="preserve">
    <value>User R library path</value>
    <comment>CustomSettingsWindow.xaml : Title for User R library location</comment>
  </data>
  <data name="lblNewDatasetStrToFactor" xml:space="preserve">
    <value>Convert string variables to factor in a new dataset</value>
    <comment>CustomSettingsWindow.xaml : Newdataset setting in Advanced tab in settings</comment>
  </data>
</root>